/home/sabbir/sst-elements-org/merlin/bridge.cc:45:5: warning: use range-based for loop instead [modernize-loop-convert]
    for ( int i = 0 ; i < 2 ; i++ ) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & interface : interfaces)
/home/sabbir/sst-elements-org/merlin/bridge.cc:45:9: note: FIX-IT applied suggested code changes
    for ( int i = 0 ; i < 2 ; i++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/bridge.cc:46:16: note: FIX-IT applied suggested code changes
        delete interfaces[i].nic;
               ^
/home/sabbir/sst-elements-org/merlin/bridge.cc:88:5: warning: use range-based for loop instead [modernize-loop-convert]
    for ( int i = 0 ; i < 2 ; i++ ) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & nic : interfaces)
/home/sabbir/sst-elements-org/merlin/bridge.cc:88:9: note: FIX-IT applied suggested code changes
    for ( int i = 0 ; i < 2 ; i++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/bridge.cc:89:9: note: FIX-IT applied suggested code changes
        Nic_t &nic = interfaces[i];
        ^
/home/sabbir/sst-elements-org/merlin/bridge.cc:116:20: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
void Bridge::setup(void)
                   ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.cc:116:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.cc:125:21: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
void Bridge::finish(void)
                    ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.cc:125:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.cc:143:10: warning: use nullptr [modernize-use-nullptr]
    if ( NULL == req ) return false;
         ^~~~
         nullptr
/home/sabbir/sst-elements-org/merlin/bridge.cc:143:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.cc:161:33: warning: parameter 'vn' is unused [misc-unused-parameters]
bool Bridge::spaceAvailable(int vn, uint8_t id)
                                ^~
                                 /*vn*/
/home/sabbir/sst-elements-org/merlin/bridge.cc:161:33: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:46:109: warning: use nullptr [modernize-use-nullptr]
        {"translator",                "Translator backend.  Inherit from SST::Merlin::Bridge::Translator.", NULL},
                                                                                                            ^~~~
                                                                                                            nullptr
/home/sabbir/sst-elements-org/merlin/bridge.h:46:109: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:75:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    void setup(void);
               ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.h:75:16: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:76:17: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    void finish(void);
                ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.h:76:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:86:52: warning: parameter 'params' is unused [misc-unused-parameters]
        Translator(SST::ComponentId_t cid, Params &params, Bridge* bridge) : SubComponent(cid), bridge(bridge) { }
                                                   ^~~~~~
                                                    /*params*/
/home/sabbir/sst-elements-org/merlin/bridge.h:86:52: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:88:28: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        virtual void setup(void) { }
                           ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.h:88:28: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:89:29: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        virtual void finish(void) { }
                            ^~~~
/home/sabbir/sst-elements-org/merlin/bridge.h:89:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:117:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::map<std::string, uint64_t> imreMap_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using imreMap_t = std::map<std::string, uint64_t>
/home/sabbir/sst-elements-org/merlin/bridge.h:117:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:128:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    Nic_t interfaces[2];
    ^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:1: error: unknown type name 'BOOST_CLASS_EXPORT' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::internal_router_event)
^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:33: error: no member named 'internal_router_event' in namespace 'SST::Merlin' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::internal_router_event)
                                ^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:55: error: expected ';' after top level declarator [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::internal_router_event)
                                                      ^
                                                      ;
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:55: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:43:10: warning: use default member initializer for 'requestNotifyOnEvent' [modernize-use-default-member-init]
    bool requestNotifyOnEvent;
         ^
                             {false}
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:43:30: note: FIX-IT applied suggested code changes
    bool requestNotifyOnEvent;
                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:47:6: note: FIX-IT applied suggested code changes
        requestNotifyOnEvent(false),
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:55:9: warning: use default member initializer for 'vcs_with_data' [modernize-use-default-member-init]
    int vcs_with_data;
        ^
                     {0}
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:48:6: note: FIX-IT applied suggested code changes
        vcs_with_data(0)
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:55:22: note: FIX-IT applied suggested code changes
    int vcs_with_data;
                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:65:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~Router() {}
            ^         ~~
                      = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:65:23: note: FIX-IT applied suggested code changes
    virtual ~Router() {}
                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:102:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    BaseRtrEvent()  {} // For Serialization only
    ^               ~~
                    = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:102:21: note: FIX-IT applied suggested code changes
    BaseRtrEvent()  {} // For Serialization only
                    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:137:29: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual RtrEvent* clone(void)  override {
                            ^~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:137:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:138:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        RtrEvent *ret = new RtrEvent(*this);
        ^~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:138:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:143:39: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    inline SimTime_t getInjectionTime(void) const { return injectionTime; }
                                      ^~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:143:39: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:165:43: warning: use nullptr [modernize-use-nullptr]
        if ( request->inspectPayload() != NULL) request->inspectPayload()->print("  -> ", out);
                                          ^~~~
                                          nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:165:43: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:182:15: warning: use default member initializer for 'injectionTime' [modernize-use-default-member-init]
    SimTime_t injectionTime;
              ^
                           {0}
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:117:9: note: FIX-IT applied suggested code changes
        injectionTime(0)
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:182:28: note: FIX-IT applied suggested code changes
    SimTime_t injectionTime;
                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:192:9: warning: use default member initializer for 'size_in_flits' [modernize-use-default-member-init]
    int size_in_flits;
        ^
                     {0}
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:192:22: note: FIX-IT applied suggested code changes
    int size_in_flits;
                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:202:2: note: FIX-IT applied suggested code changes
        size_in_flits(0)
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:299:20: warning: use nullptr [modernize-use-nullptr]
        encap_ev = NULL;
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:299:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:306:26: warning: use nullptr [modernize-use-nullptr]
        if ( encap_ev != NULL ) delete encap_ev;
                         ^~~~
                         nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:306:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:309:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:309:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:345:26: warning: use nullptr [modernize-use-nullptr]
        if ( encap_ev != NULL ) encap_ev->print(header + std::string("-> "),out);
                         ^~~~
                         nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:345:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:369:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~Topology() {}
            ^           ~~
                        = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:369:25: note: FIX-IT applied suggested code changes
    virtual ~Topology() {}
                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:378:49: warning: parameter 'port' is unused [misc-unused-parameters]
    virtual std::string getPortLogicalGroup(int port) const {return "";}
                                                ^~~~
                                                 /*port*/
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:378:49: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:387:35: warning: parameter 'port' is unused [misc-unused-parameters]
    virtual int getEndpointID(int port) {return -1;}
                                  ^~~~
                                   /*port*/
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:387:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:417:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<TopologyEvent*> topo_queue_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using topo_queue_t = std::queue<TopologyEvent *>
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:417:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:440:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~PortInterface() {}
            ^                ~~
                             = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:440:30: note: FIX-IT applied suggested code changes
    virtual ~PortInterface() {}
                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:468:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
        virtual ~OutputArbitration() {}
                ^                    ~~
                                     = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:468:38: note: FIX-IT applied suggested code changes
        virtual ~OutputArbitration() {}
                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:488:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~XbarArbitration() {}
            ^                  ~~
                               = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:488:32: note: FIX-IT applied suggested code changes
    virtual ~XbarArbitration() {}
                               ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:42:14: warning: use default member initializer for 'seq' [modernize-use-default-member-init]
    uint32_t seq;
             ^
                {0}
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:42:17: note: FIX-IT applied suggested code changes
    uint32_t seq;
                ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:46:9: note: FIX-IT applied suggested code changes
        seq(0)
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:65:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~ReorderRequest() {}
    ^                 ~~
                      = default;
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:65:23: note: FIX-IT applied suggested code changes
    ~ReorderRequest() {}
                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:78:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::priority_queue<ReorderRequest*, std::vector<ReorderRequest*>, Priority> PriorityQueue;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using PriorityQueue = std::priority_queue<ReorderRequest *, std::vector<ReorderRequest *>, Priority>
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:78:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:92:14: warning: use default member initializer for 'send' [modernize-use-default-member-init]
    uint32_t send;
             ^
                 {0}
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:92:18: note: FIX-IT applied suggested code changes
    uint32_t send;
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:97:9: note: FIX-IT applied suggested code changes
        send(0),
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:93:14: warning: use default member initializer for 'recv' [modernize-use-default-member-init]
    uint32_t recv;
             ^
                 {0}
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:93:18: note: FIX-IT applied suggested code changes
    uint32_t recv;
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:98:9: note: FIX-IT applied suggested code changes
        recv(0)
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:104:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        ReorderRequest* req = new ReorderRequest();
        ^~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:104:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:138:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<SST::Interfaces::SimpleNetwork::Request*> request_queue_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using request_queue_t = std::queue<SST::Interfaces::SimpleNetwork::Request *>
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:138:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:47:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    RouterPortPair() {}
    ^                ~~
                     = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:47:22: note: FIX-IT applied suggested code changes
    RouterPortPair() {}
                     ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:59:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    RouteToGroup() {}
    ^              ~~
                   = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:59:20: note: FIX-IT applied suggested code changes
    RouteToGroup() {}
                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:186:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_dragonfly_event() { }
    ^                      ~~~
                           = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:186:28: note: FIX-IT applied suggested code changes
    topo_dragonfly_event() { }
                           ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:190:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~topo_dragonfly_event() { }
    ^                       ~~~
                            = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:190:29: note: FIX-IT applied suggested code changes
    ~topo_dragonfly_event() { }
                            ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:192:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event *clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:192:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:47:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    RouterPortPair2() {}
    ^                 ~~
                      = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:47:23: note: FIX-IT applied suggested code changes
    RouterPortPair2() {}
                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:59:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    RouteToGroup2() {}
    ^               ~~
                    = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:59:21: note: FIX-IT applied suggested code changes
    RouteToGroup2() {}
                    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:186:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_dragonfly2_event() { }
    ^                       ~~~
                            = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:186:29: note: FIX-IT applied suggested code changes
    topo_dragonfly2_event() { }
                            ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:190:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~topo_dragonfly2_event() { }
    ^                        ~~~
                             = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:190:30: note: FIX-IT applied suggested code changes
    ~topo_dragonfly2_event() { }
                             ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:192:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event *clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:192:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:26:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:26:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:39:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_mesh_event() {}
    ^                 ~~
                      = default;
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:39:23: note: FIX-IT applied suggested code changes
    topo_mesh_event() {}
                      ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:42:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:42:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:44:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        topo_mesh_event* tte = new topo_mesh_event(*this);
        ^~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:44:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:76:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_mesh_init_event() {}
    ^                      ~~
                           = default;
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:76:28: note: FIX-IT applied suggested code changes
    topo_mesh_init_event() {}
                           ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:78:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~topo_mesh_init_event() { }
            ^                       ~~~
                                    = default;
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:78:37: note: FIX-IT applied suggested code changes
    virtual ~topo_mesh_init_event() { }
                                    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:79:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:79:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:81:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        topo_mesh_init_event* tte = new topo_mesh_init_event(*this);
        ^~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:81:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:129:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:26:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/home/sabbir/sst-elements-org/merlin/topology/torus.h:26:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.h:39:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_torus_event() {}
    ^                  ~~
                       = default;
/home/sabbir/sst-elements-org/merlin/topology/torus.h:39:24: note: FIX-IT applied suggested code changes
    topo_torus_event() {}
                       ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:42:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/torus.h:42:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.h:44:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        topo_torus_event* tte = new topo_torus_event(*this);
        ^~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/torus.h:44:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.h:102:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:35:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~TargetGenerator() {}
    ^                  ~~
                       = default;
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:35:24: note: FIX-IT applied suggested code changes
    ~TargetGenerator() {}
                       ^
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:38:30: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    virtual int getNextValue(void) = 0;
                             ^~~~
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:38:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:47:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~background_traffic_event() {  }
            ^                           ~~~~
                                        = default;
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:47:41: note: FIX-IT applied suggested code changes
    virtual ~background_traffic_event() {  }
                                        ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:122:25: warning: use nullptr [modernize-use-nullptr]
    timing_link->send(0,NULL);
                        ^~~~
                        nullptr
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:122:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:160:17: warning: use nullptr [modernize-use-nullptr]
    if ( req != NULL ) {
                ^~~~
                nullptr
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:160:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:168:36: warning: parameter 'vn' is unused [misc-unused-parameters]
BackgroundTraffic::send_notify(int vn)
                                   ^~
                                    /*vn*/
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:168:36: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:185:53: warning: use nullptr [modernize-use-nullptr]
        timing_link->send(next_time - current_time, NULL);
                                                    ^~~~
                                                    nullptr
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:185:53: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:192:41: warning: parameter 'ev' is unused [misc-unused-parameters]
BackgroundTraffic::output_timing(Event* ev)
                                        ^~
                                         /*ev*/
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:192:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:210:53: warning: use nullptr [modernize-use-nullptr]
        timing_link->send(next_time - current_time, NULL);
                                                    ^~~~
                                                    nullptr
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:210:53: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:219:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        background_traffic_event* ev = new background_traffic_event();
        ^~~~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:219:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:221:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::Request* req = new SimpleNetwork::Request(packetDestGen->getNextValue(), id, packet_size, true, true, ev);
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.cc:221:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:47:50: warning: parameter 'params' is unused [misc-unused-parameters]
    BitComplementDist(ComponentId_t cid, Params &params, int id, int num_peers) :
                                                 ^~~~~~
                                                  /*params*/
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:47:50: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:53:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~BitComplementDist() {
    ^                    ~
                         = default;
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:53:26: note: FIX-IT applied suggested code changes
    ~BitComplementDist() {
                         ^
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:60:22: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    int getNextValue(void) {
                     ^~~~
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:60:22: note: FIX-IT applied suggested code changes
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: warning: Potential leak of memory pointed to by 'loader' [clang-analyzer-cplusplus.NewDeleteLeaks]
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/target_generator/target_generator.h:30:5: note: Calling 'BuilderLibrary::addBuilder'
    SST_ELI_REGISTER_SUBCOMPONENT_API(SST::Merlin::TargetGenerator, int, int)
    ^
/usr/local/include/sst/core/subcomponent.h:73:5: note: expanded from macro 'SST_ELI_REGISTER_SUBCOMPONENT_API'
    SST_ELI_NEW_BASE_CTOR(SST::ComponentId_t,SST::Params&,##__VA_ARGS__)
    ^
/usr/local/include/sst/core/eli/elementbuilder.h:411:3: note: expanded from macro 'SST_ELI_NEW_BASE_CTOR'
  SST_ELI_BUILDER_FXNS()
  ^
/usr/local/include/sst/core/eli/elementbuilder.h:360:12: note: expanded from macro 'SST_ELI_BUILDER_FXNS'
    return getBuilderLibrary(elemlib)->addBuilder(elem,builder); \
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:62:12: note: Calling 'BuilderLibrary::addLoader'
    return addLoader(name_, elem, fact);
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:131:17: note: Memory is allocated
  auto loader = new BuilderLoader<Base,BaseBuilder,CtorArgs...>(elemlib, elem, fact);
                ^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: note: Potential leak of memory pointed to by 'loader'
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:86:22: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    int getNextValue(void) {
                     ^~~~
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:86:22: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:19:10: warning: inclusion of deprecated C++ header 'signal.h'; consider using 'csignal' instead [modernize-deprecated-headers]
#include <signal.h>
         ^~~~~~~~~~
         <csignal>
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:19:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:96:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            SimpleNetwork::Request* req =
            ^~~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:96:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:104:21: warning: use nullptr [modernize-use-nullptr]
        if ( req != NULL ) {
                    ^~~~
                    nullptr
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:104:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:126:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SST::Interfaces::SimpleNetwork::Request* req =
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.cc:126:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:154:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    ShiftEvent() {}
    ^            ~~
                 = default;
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:154:18: note: FIX-IT applied suggested code changes
    ShiftEvent() {}
                 ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:158:18: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    Event* clone(void) override
                 ^~~~
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:158:18: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:191:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            ShiftEvent* ev = new ShiftEvent(send_seq++);
            ^~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:191:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:192:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            SimpleNetwork::Request* req = new SimpleNetwork::Request();
            ^~~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:192:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:252:29: warning: parameter 'vn' is unused [misc-unused-parameters]
shift_nic::handle_event(int vn)
                            ^~
                             /*vn*/
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:252:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:256:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        ShiftEvent* ev = dynamic_cast<ShiftEvent*>(req->takePayload());
        ^~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:256:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:257:20: warning: use nullptr [modernize-use-nullptr]
        if ( ev == NULL ) {
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:257:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:263:14: warning: Access to field 'seq' results in a dereference of a null pointer (loaded from variable 'ev') [clang-analyzer-core.NullDereference]
        if ( ev->seq < recv_seq ) {
             ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:254:5: note: Loop condition is true.  Entering loop body
    while ( link_control->requestToReceive(0) ) {
    ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:256:52: note: Calling 'Request::takePayload'
        ShiftEvent* ev = dynamic_cast<ShiftEvent*>(req->takePayload());
                                                   ^
/usr/local/include/sst/core/interfaces/simpleNetwork.h:84:13: note: 'ret' initialized here
            Event* ret = payload;
            ^
/usr/local/include/sst/core/interfaces/simpleNetwork.h:86:13: note: Returning pointer (loaded from 'ret')
            return ret;
            ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:256:52: note: Returning from 'Request::takePayload'
        ShiftEvent* ev = dynamic_cast<ShiftEvent*>(req->takePayload());
                                                   ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:256:9: note: 'ev' initialized here
        ShiftEvent* ev = dynamic_cast<ShiftEvent*>(req->takePayload());
        ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:257:14: note: Assuming 'ev' is equal to NULL
        if ( ev == NULL ) {
             ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:257:9: note: Taking true branch
        if ( ev == NULL ) {
        ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.cc:263:14: note: Access to field 'seq' results in a dereference of a null pointer (loaded from variable 'ev')
        if ( ev->seq < recv_seq ) {
             ^
/home/sabbir/sst-elements-org/merlin/test/nic.cc:21:10: warning: inclusion of deprecated C++ header 'signal.h'; consider using 'csignal' instead [modernize-deprecated-headers]
#include <signal.h>
         ^~~~~~~~~~
         <csignal>
/home/sabbir/sst-elements-org/merlin/test/nic.cc:21:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:158:33: warning: parameter 'phase' is unused [misc-unused-parameters]
nic::init_complete(unsigned int phase) {
                                ^~~~~
                                 /*phase*/
/home/sabbir/sst-elements-org/merlin/test/nic.cc:158:33: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:169:17: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                SimpleNetwork::Request* req =
                ^~~~~~~~~~~~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:169:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:180:21: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                    SimpleNetwork::Request* req =
                    ^~~~~~~~~~~~~~~~~~~~~~
                    auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:180:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:200:58: warning: use nullptr [modernize-use-nullptr]
        while ( (req = link_control->recvInitData() ) != NULL ) {
                                                         ^~~~
                                                         nullptr
/home/sabbir/sst-elements-org/merlin/test/nic.cc:200:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:206:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            SimpleNetwork::Request* req =
            ^~~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:206:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:217:58: warning: use nullptr [modernize-use-nullptr]
        while ( (req = link_control->recvInitData() ) != NULL ) {
                                                         ^~~~
                                                         nullptr
/home/sabbir/sst-elements-org/merlin/test/nic.cc:217:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:252:58: warning: use nullptr [modernize-use-nullptr]
        while ( (req = link_control->recvInitData() ) != NULL ) {
                                                         ^~~~
                                                         nullptr
/home/sabbir/sst-elements-org/merlin/test/nic.cc:252:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:273:58: warning: use nullptr [modernize-use-nullptr]
        while ( (req = link_control->recvInitData() ) != NULL ) {
                                                         ^~~~
                                                         nullptr
/home/sabbir/sst-elements-org/merlin/test/nic.cc:273:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:297:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    MyRtrEvent() {}
    ^            ~~
                 = default;
/home/sabbir/sst-elements-org/merlin/test/nic.cc:297:18: note: FIX-IT applied suggested code changes
    MyRtrEvent() {}
                 ^
/home/sabbir/sst-elements-org/merlin/test/nic.cc:301:18: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    Event* clone(void) override
                 ^~~~
/home/sabbir/sst-elements-org/merlin/test/nic.cc:301:18: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:344:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            MyRtrEvent* ev = new MyRtrEvent(packets_sent/num_peers);
            ^~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:344:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:345:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            SimpleNetwork::Request* req = new SimpleNetwork::Request();
            ^~~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:345:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:373:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        MyRtrEvent* ev = dynamic_cast<MyRtrEvent*>(req->takePayload());
        ^~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/nic.cc:373:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/nic.cc:374:20: warning: use nullptr [modernize-use-nullptr]
        if ( ev == NULL ) {
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/test/nic.cc:374:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:166:31: warning: parameter 'ev' is unused [misc-unused-parameters]
void pt2pt_test::start(Event* ev)
                              ^~
                               /*ev*/
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:166:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:169:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::Request* req = new SimpleNetwork::Request();
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:169:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:191:55: warning: use nullptr [modernize-use-nullptr]
        self_link->send(delay_in_ns.getRoundedValue(),NULL);
                                                      ^~~~
                                                      nullptr
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:191:55: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:224:31: warning: use nullptr [modernize-use-nullptr]
        report_timing->send(1,NULL);
                              ^~~~
                              nullptr
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:224:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:274:30: warning: parameter 'vn' is unused [misc-unused-parameters]
pt2pt_test::send_handler(int vn) {
                             ^~
                              /*vn*/
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:274:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:277:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::Request* req = new SimpleNetwork::Request();
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:277:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:300:30: warning: parameter 'vn' is unused [misc-unused-parameters]
pt2pt_test::recv_handler(int vn) {
                             ^~
                              /*vn*/
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:300:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:338:35: warning: parameter 'ev' is unused [misc-unused-parameters]
void pt2pt_test::report_bw(Event* ev) {
                                  ^~
                                   /*ev*/
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:338:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:365:27: warning: use nullptr [modernize-use-nullptr]
    report_timing->send(1,NULL);
                          ^~~~
                          nullptr
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.cc:365:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:69:19: warning: use default member initializer for 'first_arrival' [modernize-use-default-member-init]
        SimTime_t first_arrival;
                  ^
                               {0}
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:69:32: note: FIX-IT applied suggested code changes
        SimTime_t first_arrival;
                               ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:74:13: note: FIX-IT applied suggested code changes
            first_arrival(0),
            ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:70:19: warning: use default member initializer for 'end_arrival' [modernize-use-default-member-init]
        SimTime_t end_arrival;
                  ^
                             {0}
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:70:30: note: FIX-IT applied suggested code changes
        SimTime_t end_arrival;
                             ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:75:13: note: FIX-IT applied suggested code changes
            end_arrival(0),
            ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:71:13: warning: use default member initializer for 'packets_recd' [modernize-use-default-member-init]
        int packets_recd;
            ^
                        {0}
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:71:25: note: FIX-IT applied suggested code changes
        int packets_recd;
                        ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:76:13: note: FIX-IT applied suggested code changes
            packets_recd(0) {}
            ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:119:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~pt2pt_test() {}
    ^             ~~
                  = default;
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:119:19: note: FIX-IT applied suggested code changes
    ~pt2pt_test() {}
                  ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:141:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    pt2pt_test_event() {}
    ^                  ~~
                       = default;
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:141:24: note: FIX-IT applied suggested code changes
    pt2pt_test_event() {}
                       ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:143:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual Event* clone(void) override
                         ^~~~
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:143:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:73:9: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
        recv_data()
        ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:74:13: note: FIX-IT applied suggested code changes
            {}
            ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:83:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~bisection_test() {}
    ^                 ~~
                      = default;
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:83:23: note: FIX-IT applied suggested code changes
    ~bisection_test() {}
                      ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:102:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    bisection_test_event() {}
    ^                      ~~
                           = default;
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:102:28: note: FIX-IT applied suggested code changes
    bisection_test_event() {}
                           ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:104:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual Event* clone(void) override
                         ^~~~
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:104:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:134:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        bisection_test_event* ev = new bisection_test_event();
        ^~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:134:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:135:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::Request* req = new SimpleNetwork::Request();
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:135:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:158:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        bisection_test_event* rec_ev = static_cast<bisection_test_event*>(req->takePayload());
        ^~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.cc:158:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../arbitration/single_arb.h:35:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~SingleArbitration() {}
            ^                    ~~
                                 = default;
/home/sabbir/sst-elements-org/merlin/interfaces/../arbitration/single_arb.h:35:34: note: FIX-IT applied suggested code changes
    virtual ~SingleArbitration() {}
                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:60:9: warning: member initializer for 'requestNotifyOnEvent' is redundant [modernize-use-default-member-init]
        requestNotifyOnEvent(false),
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:60:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:61:9: warning: member initializer for 'vcs_with_data' is redundant [modernize-use-default-member-init]
        vcs_with_data(0)
        ^~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:61:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:124:9: warning: member initializer for 'injectionTime' is redundant [modernize-use-default-member-init]
        injectionTime(0)
        ^~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:124:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:81:13: error: use of undeclared identifier 'merlin_abort' [clang-diagnostic-error]
            merlin_abort.fatal(CALL_INFO_LONG,1,"output_arb_qos_multi: must specify qos_settings\n");
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:141:13: error: use of undeclared identifier 'merlin_abort' [clang-diagnostic-error]
            merlin_abort.fatal(CALL_INFO_LONG,1,"output_arb_qos_multi: size of qos_settings does not match number of vns in network\n");
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:171:45: warning: use nullptr [modernize-use-nullptr]
        internal_router_event* send_event = NULL;
                                            ^~~~
                                            nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:171:45: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:77:45: warning: use nullptr [modernize-use-nullptr]
        internal_router_event* send_event = NULL;
                                            ^~~~
                                            nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:77:45: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:87:13: warning: Value stored to 'found' is never read [clang-analyzer-deadcode.DeadStores]
            found = true;
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:87:13: note: Value stored to 'found' is never read
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:87:13: warning: Value stored to 'found' is never read [clang-analyzer-deadcode.DeadStores]
            found = true;
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:87:13: note: Value stored to 'found' is never read
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:78:28: warning: use nullptr [modernize-use-nullptr]
            output_timing->send(1,NULL); 
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:78:28: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:107:38: warning: use nullptr [modernize-use-nullptr]
        if ( input_buf[vc].empty() ) return NULL;
                                            ^~~~
                                            nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:107:38: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:114:21: warning: use nullptr [modernize-use-nullptr]
            vc_heads[vc] = NULL;
                           ^~~~
                           nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:114:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:148:15: warning: use nullptr [modernize-use-nullptr]
    input_buf(NULL),
              ^~~~
              nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:148:15: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:149:16: warning: use nullptr [modernize-use-nullptr]
    output_buf(NULL),
               ^~~~
               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:149:16: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:150:21: warning: use nullptr [modernize-use-nullptr]
    input_buf_count(NULL),
                    ^~~~
                    nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:150:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:151:22: warning: use nullptr [modernize-use-nullptr]
    output_buf_count(NULL),
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:151:22: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:152:22: warning: use nullptr [modernize-use-nullptr]
    port_ret_credits(NULL),
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:152:22: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:153:22: warning: use nullptr [modernize-use-nullptr]
    port_out_credits(NULL),
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:153:22: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:212:27: warning: use nullptr [modernize-use-nullptr]
        if ( port_link != NULL ) {
                          ^~~~
                          nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:212:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:221:27: warning: use nullptr [modernize-use-nullptr]
        if ( port_link != NULL ) {
                          ^~~~
                          nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:221:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:228:21: warning: use nullptr [modernize-use-nullptr]
        port_link = NULL;
                    ^~~~
                    nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:228:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:241:23: warning: use nullptr [modernize-use-nullptr]
    if ( port_link == NULL ) {
                      ^~~~
                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:241:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:307:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::NetworkInspector* ni = loadAnonymousSubComponent<SimpleNetwork::NetworkInspector>
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:307:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:309:20: warning: use nullptr [modernize-use-nullptr]
        if ( ni == NULL ) {
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:309:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:355:27: warning: use nullptr [modernize-use-nullptr]
            vc_heads[i] = NULL;
                          ^~~~
                          nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:355:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:372:23: warning: use nullptr [modernize-use-nullptr]
        vc_heads[i] = NULL;
                      ^~~~
                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:372:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:427:23: warning: use nullptr [modernize-use-nullptr]
    if ( input_buf != NULL ) delete [] input_buf;
                      ^~~~
                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:427:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:428:24: warning: use nullptr [modernize-use-nullptr]
    if ( output_buf != NULL ) delete [] output_buf;
                       ^~~~
                       nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:428:24: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:429:29: warning: use nullptr [modernize-use-nullptr]
    if ( input_buf_count != NULL ) delete [] input_buf_count;
                            ^~~~
                            nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:429:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:430:30: warning: use nullptr [modernize-use-nullptr]
    if ( output_buf_count != NULL ) delete [] output_buf_count;
                             ^~~~
                             nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:430:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:432:30: warning: use nullptr [modernize-use-nullptr]
    if ( port_ret_credits != NULL ) delete [] port_ret_credits;
                             ^~~~
                             nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:432:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:433:30: warning: use nullptr [modernize-use-nullptr]
    if ( port_out_credits != NULL ) delete [] port_out_credits;
                             ^~~~
                             nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:433:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:434:5: warning: use range-based for loop instead [modernize-loop-convert]
    for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & network_inspector : network_inspectors)
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:434:9: note: FIX-IT applied suggested code changes
    for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:435:16: note: FIX-IT applied suggested code changes
        delete network_inspectors[i];
               ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:442:48: warning: use nullptr [modernize-use-nullptr]
        if (dlink_thresh >= 0) dynlink_timing->send(1,NULL);
                                                      ^~~~
                                                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:442:48: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:475:5: warning: use range-based for loop instead [modernize-loop-convert]
    for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & network_inspector : network_inspectors)
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:475:9: note: FIX-IT applied suggested code changes
    for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:476:9: note: FIX-IT applied suggested code changes
        network_inspectors[i]->finish();
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:503:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            RtrInitEvent* ev = new RtrInitEvent();
            ^~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:503:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:629:55: warning: use nullptr [modernize-use-nullptr]
        while ( ( ev = port_link->recvInitData() ) != NULL ) {
                                                      ^~~~
                                                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:629:55: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:630:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            credit_event* ce = dynamic_cast<credit_event*>(ev);
            ^~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:630:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:631:24: warning: use nullptr [modernize-use-nullptr]
            if ( ce != NULL ) {
                       ^~~~
                       nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:631:24: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:639:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                RtrInitEvent* init_ev = dynamic_cast<RtrInitEvent*>(ev);
                ^~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:639:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:640:33: warning: use nullptr [modernize-use-nullptr]
                if ( init_ev != NULL ) {
                                ^~~~
                                nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:640:33: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:656:36: warning: parameter 'phase' is unused [misc-unused-parameters]
PortControl::complete(unsigned int phase) {
                                   ^~~~~
                                    /*phase*/
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:656:36: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:661:51: warning: use nullptr [modernize-use-nullptr]
    while ( ( ev = port_link->recvInitData() ) != NULL ) {
                                                  ^~~~
                                                  nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:661:51: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:695:16: warning: use nullptr [modernize-use-nullptr]
        return NULL;
               ^~~~
               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:695:16: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:780:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        BaseRtrEvent* base_event = static_cast<BaseRtrEvent*>(ev);
        ^~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:780:2: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:785:6: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            credit_event* ce = static_cast<credit_event*>(ev);
            ^~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:785:6: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:805:35: warning: use nullptr [modernize-use-nullptr]
            output_timing->send(1,NULL); 
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:805:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:817:6: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            RtrEvent* event = static_cast<RtrEvent*>(ev);
            ^~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:817:6: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:830:32: warning: use nullptr [modernize-use-nullptr]
            if ( vc_heads[curr_vc] == NULL ) {
                                      ^~~~
                                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:830:32: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:881:2: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        BaseRtrEvent* base_event = static_cast<BaseRtrEvent*>(ev);
        ^~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:881:2: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:886:6: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            credit_event* ce = static_cast<credit_event*>(ev);
            ^~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:886:6: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:893:35: warning: use nullptr [modernize-use-nullptr]
            output_timing->send(1,NULL); 
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:893:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:908:6: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            internal_router_event* event = static_cast<internal_router_event*>(ev);
            ^~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:908:6: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:919:32: warning: use nullptr [modernize-use-nullptr]
            if ( vc_heads[curr_vc] == NULL ) {
                                      ^~~~
                                      nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:919:32: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:962:35: warning: parameter 'ev' is unused [misc-unused-parameters]
PortControl::handle_output(Event* ev) {
                                  ^~
                                   /*ev*/
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:962:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:974:50: warning: use nullptr [modernize-use-nullptr]
            output_timing->send(event->getSizeInFlits(),NULL);
                                                        ^~~~
                                                        nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:974:50: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1011:31: warning: use nullptr [modernize-use-nullptr]
            output_timing->send(size,NULL); 
                                     ^~~~
                                     nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1011:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1037:9: warning: use range-based for loop instead [modernize-loop-convert]
        for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (auto & network_inspector : network_inspectors)
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1037:13: note: FIX-IT applied suggested code changes
        for ( unsigned int i = 0; i < network_inspectors.size(); i++ ) {
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1038:13: note: FIX-IT applied suggested code changes
            network_inspectors[i]->inspectNetworkData(send_event->inspectRequest());
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1043:46: warning: use nullptr [modernize-use-nullptr]
            send_event->setEncapsulatedEvent(NULL);
                                             ^~~~
                                             nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1043:46: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1074:26: warning: use nullptr [modernize-use-nullptr]
                        output_timing->send(1,NULL); 
                                              ^~~~
                                              nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1074:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1088:34: warning: parameter 'ev' is unused [misc-unused-parameters]
PortControl::reenablePort(Event* ev) {
                                 ^~
                                  /*ev*/
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1088:34: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1095:37: warning: parameter 'ev' is unused [misc-unused-parameters]
PortControl::handleSAIWindow(Event* ev) {
                                    ^~
                                     /*ev*/
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1095:37: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1130:25: warning: use nullptr [modernize-use-nullptr]
        dynlink_timing->send(1,NULL);
                               ^~~~
                               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1130:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1153:32: warning: use nullptr [modernize-use-nullptr]
        disable_timing->send(1,NULL);
                               ^~~~
                               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1153:32: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1180:25: warning: use nullptr [modernize-use-nullptr]
        disable_timing->send(1,NULL);
                               ^~~~
                               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.cc:1180:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:187:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        RtrInitEvent* ev = new RtrInitEvent();
        ^~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:187:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:220:14: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]
        if ( static_cast<BaseRtrEvent*>(ev)->getType() != BaseRtrEvent::INITIALIZATION ) {
             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:177:5: note: Control jumps to 'case 1:'  at line 193
    switch ( phase ) {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:199:14: note: Assuming the condition is false
        if ( link_bw > init_ev->ua_value ) link_bw = init_ev->ua_value;
             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:199:9: note: Taking false branch
        if ( link_bw > init_ev->ua_value ) link_bw = init_ev->ua_value;
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:216:9: note: Value assigned to 'ev'
        ev = rtr_link->recvInitData();
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:217:14: note: Assuming pointer value is null
        if ( ev == nullptr ) {
             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:217:9: note: Taking true branch
        if ( ev == nullptr ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:220:14: note: Called C++ object pointer is null
        if ( static_cast<BaseRtrEvent*>(ev)->getType() != BaseRtrEvent::INITIALIZATION ) {
             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:319:18: warning: Potential leak of memory pointed to by 'vn_count' [clang-analyzer-cplusplus.NewDeleteLeaks]
        delete[] vn_out_map;
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:177:5: note: Control jumps to 'case 2:'  at line 242
    switch ( phase ) {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:252:14: note: Assuming field 'vn_out_map' is non-null
        if ( vn_out_map ) {
             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:252:9: note: Taking true branch
        if ( vn_out_map ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:260:26: note: Assuming 'i' is >= field 'req_vns'
        for ( int i = 0; i < req_vns; ++i ) {
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:260:9: note: Loop condition is false. Execution continues on line 273
        for ( int i = 0; i < req_vns; ++i ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:275:26: note: Assuming 'i' is >= field 'total_vns'
        for ( int i = 0; i < total_vns; ++i ) {
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:275:9: note: Loop condition is false. Execution continues on line 281
        for ( int i = 0; i < total_vns; ++i ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:281:25: note: Memory is allocated
        int* vn_count = new int[total_vns];
                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:282:26: note: 'i' is >= field 'total_vns'
        for ( int i = 0; i < total_vns; ++i ) vn_count[i] = 0;
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:282:9: note: Loop condition is false. Execution continues on line 284
        for ( int i = 0; i < total_vns; ++i ) vn_count[i] = 0;
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:285:26: note: 'i' is >= field 'req_vns'
        for ( int i = 0; i < req_vns; ++i ) {
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:285:9: note: Loop condition is false. Execution continues on line 300
        for ( int i = 0; i < req_vns; ++i ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:303:26: note: 'i' is >= field 'total_vns'
        for ( int i = 0; i < total_vns; ++i ) {
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:303:9: note: Loop condition is false. Execution continues on line 319
        for ( int i = 0; i < total_vns; ++i ) {
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:319:18: note: Potential leak of memory pointed to by 'vn_count'
        delete[] vn_out_map;
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:339:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            BaseRtrEvent* bev = static_cast<BaseRtrEvent*>(ev);
            ^~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:339:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:343:17: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
                credit_event* ce = static_cast<credit_event*>(bev);
                ^~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:343:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:366:41: warning: parameter 'phase' is unused [misc-unused-parameters]
void LinkControl::complete(unsigned int phase)
                                        ^~~~~
                                         /*phase*/
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:366:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:374:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        BaseRtrEvent* bev = static_cast<BaseRtrEvent*>(ev);
        ^~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:374:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:390:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
void LinkControl::finish(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:390:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:431:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    RtrEvent* ev = new RtrEvent(req,id,real_vn);
    ^~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:431:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:437:46: warning: Potential leak of memory pointed to by 'ev' [clang-analyzer-cplusplus.NewDeleteLeaks]
    if ( out_handle.credits < flits ) return false;
                                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:418:10: note: Assuming 'vn' is < field 'req_vns'
    if ( vn >= req_vns ) return false;
         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:418:5: note: Taking false branch
    if ( vn >= req_vns ) return false;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:422:10: note: Assuming field 'nid_map' is null
    if ( nid_map ) req->dest = nid_map[req->dest];
         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:422:5: note: Taking false branch
    if ( nid_map ) req->dest = nid_map[req->dest];
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:431:20: note: Memory is allocated
    RtrEvent* ev = new RtrEvent(req,id,real_vn);
                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:437:10: note: Assuming 'flits' is > field 'credits'
    if ( out_handle.credits < flits ) return false;
         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:437:5: note: Taking true branch
    if ( out_handle.credits < flits ) return false;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:437:46: note: Potential leak of memory pointed to by 'ev'
    if ( out_handle.credits < flits ) return false;
                                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:533:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    BaseRtrEvent* base_event = static_cast<BaseRtrEvent*>(ev);
    ^~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:533:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:535:6: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        credit_event* ce = static_cast<credit_event*>(ev);
        ^~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:535:6: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:552:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        RtrEvent* event = static_cast<RtrEvent*>(ev);
        ^~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:552:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:582:40: warning: parameter 'ev' is unused [misc-unused-parameters]
void LinkControl::handle_output(Event* ev)
                                       ^~
                                        /*ev*/
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.cc:582:40: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:89:13: warning: use default member initializer for 'vn' [modernize-use-default-member-init]
        int vn;
            ^
              {-1}
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:89:15: note: FIX-IT applied suggested code changes
        int vn;
              ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:93:13: note: FIX-IT applied suggested code changes
            vn(-1),
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:90:13: warning: use default member initializer for 'credits' [modernize-use-default-member-init]
        int credits;
            ^
                   {0}
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:90:20: note: FIX-IT applied suggested code changes
        int credits;
                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:94:13: note: FIX-IT applied suggested code changes
            credits(0)
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:32:20: warning: use nullptr [modernize-use-nullptr]
    receiveFunctor(NULL),
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:32:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:77:51: warning: parameter 'port_name' is unused [misc-unused-parameters]
ReorderLinkControl::initialize(const std::string& port_name, const UnitAlgebra& link_bw_in,
                                                  ^~~~~~~~~
                                                   /*port_name*/
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:77:51: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:77:81: warning: parameter 'link_bw_in' is unused [misc-unused-parameters]
ReorderLinkControl::initialize(const std::string& port_name, const UnitAlgebra& link_bw_in,
                                                                                ^~~~~~~~~~
                                                                                 /*link_bw_in*/
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:77:81: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:78:60: warning: parameter 'in_buf_size' is unused [misc-unused-parameters]
                               int vns, const UnitAlgebra& in_buf_size,
                                                           ^~~~~~~~~~~
                                                            /*in_buf_size*/
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:78:60: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:79:51: warning: parameter 'out_buf_size' is unused [misc-unused-parameters]
                               const UnitAlgebra& out_buf_size)
                                                  ^~~~~~~~~~~~
                                                   /*out_buf_size*/
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:79:51: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:121:33: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
void ReorderLinkControl::finish(void)
                                ^~~~
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:121:33: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:144:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    ReorderRequest* my_req = new ReorderRequest(req);
    ^~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:144:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:151:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        ReorderInfo* info = new ReorderInfo();
        ^~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:151:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:178:45: warning: use nullptr [modernize-use-nullptr]
    if ( input_buf[vn].size() == 0 ) return NULL;
                                            ^~~~
                                            nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:178:45: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:236:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    ReorderRequest* my_req = static_cast<ReorderRequest*>(link_control->recv(vn));
    ^~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:236:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:241:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        ReorderInfo* info = new ReorderInfo();
        ^~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:241:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:263:32: warning: use nullptr [modernize-use-nullptr]
        if ( receiveFunctor != NULL ) {
                               ^~~~
                               nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:263:32: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:265:41: warning: use nullptr [modernize-use-nullptr]
            if (!keep) receiveFunctor = NULL;
                                        ^~~~
                                        nullptr
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.cc:265:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:92:9: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
        output_queue_bundle_t() 
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:94:13: note: FIX-IT applied suggested code changes
            {}
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:51:18: warning: use default member initializer for 'port' [modernize-use-default-member-init]
        uint16_t port;
                 ^
                     {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:51:22: note: FIX-IT applied suggested code changes
        uint16_t port;
                     ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:65:13: note: FIX-IT applied suggested code changes
            port(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:52:18: warning: use default member initializer for 'vc' [modernize-use-default-member-init]
        uint16_t vc;
                 ^
                   {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:52:20: note: FIX-IT applied suggested code changes
        uint16_t vc;
                   ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:66:13: note: FIX-IT applied suggested code changes
            vc(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:53:18: warning: use default member initializer for 'next_port' [modernize-use-default-member-init]
        uint16_t next_port;
                 ^
                          {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:53:27: note: FIX-IT applied suggested code changes
        uint16_t next_port;
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:67:13: note: FIX-IT applied suggested code changes
            next_port(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:54:18: warning: use default member initializer for 'next_vc' [modernize-use-default-member-init]
        uint16_t next_vc;
                 ^
                        {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:54:25: note: FIX-IT applied suggested code changes
        uint16_t next_vc;
                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:68:13: note: FIX-IT applied suggested code changes
            next_vc(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:55:19: warning: use default member initializer for 'injection_time' [modernize-use-default-member-init]
        SimTime_t injection_time;
                  ^
                                {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:55:33: note: FIX-IT applied suggested code changes
        SimTime_t injection_time;
                                ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:69:13: note: FIX-IT applied suggested code changes
            injection_time(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:56:13: warning: use default member initializer for 'size_in_flits' [modernize-use-default-member-init]
        int size_in_flits;
            ^
                         {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:56:26: note: FIX-IT applied suggested code changes
        int size_in_flits;
                         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:70:13: note: FIX-IT applied suggested code changes
            size_in_flits(0)
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:126:45: warning: parameter 'params' is unused [misc-unused-parameters]
    xbar_arb_age(ComponentId_t cid, Params& params) :
                                            ^~~~~~
                                             /*params*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:126:45: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:180:35: warning: use nullptr [modernize-use-nullptr]
                if ( src_event != NULL ) {
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:180:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:53:18: warning: use default member initializer for 'port' [modernize-use-default-member-init]
        uint16_t port;
                 ^
                     {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:53:22: note: FIX-IT applied suggested code changes
        uint16_t port;
                     ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:67:13: note: FIX-IT applied suggested code changes
            port(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:54:18: warning: use default member initializer for 'vc' [modernize-use-default-member-init]
        uint16_t vc;
                 ^
                   {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:54:20: note: FIX-IT applied suggested code changes
        uint16_t vc;
                   ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:68:13: note: FIX-IT applied suggested code changes
            vc(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:55:18: warning: use default member initializer for 'next_port' [modernize-use-default-member-init]
        uint16_t next_port;
                 ^
                          {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:55:27: note: FIX-IT applied suggested code changes
        uint16_t next_port;
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:69:13: note: FIX-IT applied suggested code changes
            next_port(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:56:18: warning: use default member initializer for 'next_vc' [modernize-use-default-member-init]
        uint16_t next_vc;
                 ^
                        {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:56:25: note: FIX-IT applied suggested code changes
        uint16_t next_vc;
                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:70:13: note: FIX-IT applied suggested code changes
            next_vc(0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:57:16: warning: use default member initializer for 'rand_pri' [modernize-use-default-member-init]
        double rand_pri;
               ^
                       {0.0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:57:24: note: FIX-IT applied suggested code changes
        double rand_pri;
                       ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:71:13: note: FIX-IT applied suggested code changes
            rand_pri(0.0),
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:58:13: warning: use default member initializer for 'size_in_flits' [modernize-use-default-member-init]
        int size_in_flits;
            ^
                         {0}
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:58:26: note: FIX-IT applied suggested code changes
        int size_in_flits;
                         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:72:13: note: FIX-IT applied suggested code changes
            size_in_flits(0)
            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:118:46: warning: parameter 'params' is unused [misc-unused-parameters]
    xbar_arb_rand(ComponentId_t cid, Params& params) :
                                             ^~~~~~
                                              /*params*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:118:46: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:173:35: warning: use nullptr [modernize-use-nullptr]
                if ( src_event != NULL ) {
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:173:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:64:44: warning: parameter 'params' is unused [misc-unused-parameters]
    xbar_arb_rr(ComponentId_t cid, Params& params) :
                                           ^~~~~~
                                            /*params*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:64:44: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:66:16: warning: use nullptr [modernize-use-nullptr]
        rr_vcs(NULL)
               ^~~~
               nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:66:16: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:71:24: warning: use nullptr [modernize-use-nullptr]
        if ( rr_vcs != NULL ) delete [] rr_vcs;
                       ^~~~
                       nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:71:24: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:120:35: warning: use nullptr [modernize-use-nullptr]
                if ( src_event == NULL ) continue;
                                  ^~~~
                                  nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:120:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:54:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    priority_entry_t* priority[2];
    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:66:45: warning: parameter 'param' is unused [misc-unused-parameters]
    xbar_arb_lru(ComponentId_t cid, Params& param) :
                                            ^~~~~
                                             /*param*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:66:45: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:71:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~xbar_arb_lru() {
    ^               ~
                    = default;
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:71:21: note: FIX-IT applied suggested code changes
    ~xbar_arb_lru() {
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:141:58: warning: use nullptr [modernize-use-nullptr]
            if ( in_port_busy[port] <= 0 && src_event != NULL) {
                                                         ^~~~
                                                         nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:141:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:27:10: warning: inclusion of deprecated C++ header 'signal.h'; consider using 'csignal' instead [modernize-deprecated-headers]
#include <signal.h>
         ^~~~~~~~~~
         <csignal>
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:27:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:64:5: warning: use range-based for loop instead [modernize-loop-convert]
    for ( unsigned int i = 0; i < tokens.size(); i++ ) {
    ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        (auto & token : tokens)
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:64:9: note: FIX-IT applied suggested code changes
    for ( unsigned int i = 0; i < tokens.size(); i++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:65:9: note: FIX-IT applied suggested code changes
        tokens[i] = trim(tokens[i]);
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:65:26: note: FIX-IT applied suggested code changes
        tokens[i] = trim(tokens[i]);
                         ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:234:10: warning: Value stored to 'oql_track_port' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    bool oql_track_port = params.find<bool>("oql_track_port","false");
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:234:10: note: Value stored to 'oql_track_port' during its initialization is never read
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:235:10: warning: Value stored to 'oql_track_remote' during its initialization is never read [clang-analyzer-deadcode.DeadStores]
    bool oql_track_remote = params.find<bool>("oql_track_remote","false");
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:235:10: note: Value stored to 'oql_track_remote' during its initialization is never read
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:357:27: warning: parameter 'signal' is unused [misc-unused-parameters]
hr_router::sigHandler(int signal)
                          ^~~~~~
                           /*signal*/
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:357:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:418:37: warning: use nullptr [modernize-use-nullptr]
            if ( vc_heads[index] != NULL ) {
                                    ^~~~
                                    nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:418:37: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:492:21: warning: use nullptr [modernize-use-nullptr]
        Event *ev = NULL;
                    ^~~~
                    nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:492:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:493:52: warning: use nullptr [modernize-use-nullptr]
        while ( (ev = ports[i]->recvInitData()) != NULL ) {
                                                   ^~~~
                                                   nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:493:52: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:494:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            internal_router_event *ire = dynamic_cast<internal_router_event*>(ev);
            ^~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:494:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:495:25: warning: use nullptr [modernize-use-nullptr]
            if ( ire == NULL ) {
                        ^~~~
                        nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:495:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:500:13: warning: use range-based for loop instead [modernize-loop-convert]
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                (int & outPort : outPorts)
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:500:17: note: FIX-IT applied suggested code changes
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
                ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:504:45: note: FIX-IT applied suggested code changes
                switch ( topo->getPortState(*j) ) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:506:27: note: FIX-IT applied suggested code changes
                    ports[*j]->sendUntimedData(ire->getEncapsulatedEvent()->clone());
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:511:27: note: FIX-IT applied suggested code changes
                    ports[*j]->sendUntimedData(new_ire);
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:500:19: warning: use auto when declaring iterators [modernize-use-auto]
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
                  ^
note: this fix will not be applied because it overlaps with another fix
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:541:21: warning: use nullptr [modernize-use-nullptr]
        Event *ev = NULL;
                    ^~~~
                    nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:541:21: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:542:52: warning: use nullptr [modernize-use-nullptr]
        while ( (ev = ports[i]->recvInitData()) != NULL ) {
                                                   ^~~~
                                                   nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:542:52: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:543:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            internal_router_event *ire = dynamic_cast<internal_router_event*>(ev);
            ^~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:543:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:544:25: warning: use nullptr [modernize-use-nullptr]
            if ( ire == NULL ) {
                        ^~~~
                        nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:544:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:549:13: warning: use range-based for loop instead [modernize-loop-convert]
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
            ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                (int & outPort : outPorts)
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:549:17: note: FIX-IT applied suggested code changes
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
                ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:553:45: note: FIX-IT applied suggested code changes
                switch ( topo->getPortState(*j) ) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:555:27: note: FIX-IT applied suggested code changes
                    ports[*j]->sendUntimedData(ire->getEncapsulatedEvent()->clone());
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:560:27: note: FIX-IT applied suggested code changes
                    ports[*j]->sendUntimedData(new_ire);
                          ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:549:19: warning: use auto when declaring iterators [modernize-use-auto]
            for ( std::vector<int>::iterator j = outPorts.begin() ; j != outPorts.end() ; ++j ) {
                  ^
note: this fix will not be applied because it overlaps with another fix
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:593:23: warning: use nullptr [modernize-use-nullptr]
        vc_heads[i] = NULL;
                      ^~~~
                      nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.cc:593:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/../router.h:414:60: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::queue<internal_router_event*> port_queue_t;
                                                           ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:54:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    priority_entry_t* priority[2];
    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:66:50: warning: parameter 'params' is unused [misc-unused-parameters]
    xbar_arb_lru_infx(ComponentId_t cid, Params& params) :
                                                 ^~~~~~
                                                  /*params*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:66:50: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:71:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~xbar_arb_lru_infx() {
    ^                    ~
                         = default;
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:71:26: note: FIX-IT applied suggested code changes
    ~xbar_arb_lru_infx() {
                         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:103:48: warning: parameter 'in_port_busy' is unused [misc-unused-parameters]
                   PortInterface** ports, int* in_port_busy, int* out_port_busy, int* progress_vc
                                               ^~~~~~~~~~~~
                                                /*in_port_busy*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:103:48: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:103:67: warning: parameter 'out_port_busy' is unused [misc-unused-parameters]
                   PortInterface** ports, int* in_port_busy, int* out_port_busy, int* progress_vc
                                                                  ^~~~~~~~~~~~~
                                                                   /*out_port_busy*/
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:103:67: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:133:31: warning: use nullptr [modernize-use-nullptr]
            if ( src_event != NULL) {
                              ^~~~
                              nullptr
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:133:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:42:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::set<SDPair> pairSet_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using pairSet_t = std::set<SDPair>
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:42:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:46:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::map<std::string, pairSet_t*> setMap_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using setMap_t = std::map<std::string, pairSet_t *>
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:46:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:29:84: warning: parameter 'sub_id' is unused [misc-unused-parameters]
                                           SST::Params &params, const std::string& sub_id) :
                                                                                   ^~~~~~
                                                                                    /*sub_id*/
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:29:84: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:48:9: warning: use auto when declaring iterators [modernize-use-auto]
        setMap_t::iterator iter = setMap.find(key);
        ^~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:48:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:51:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            pairSet_t *ps = new pairSet_t;
            ^~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:51:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:65:46: warning: parameter 'id' is unused [misc-unused-parameters]
void CircNetworkInspector::initialize(string id) {
                                             ^~
                                              /*id*/
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:65:46: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:79:9: warning: use auto when declaring iterators [modernize-use-auto]
        setMap_t::iterator iter = setMap.find(key);
        ^~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:79:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:82:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            pairSet_t *ps = new pairSet_t;
            ^~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:82:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:108:13: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
            SST::Output* output_file = new SST::Output("",0,0,
            ^~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:108:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:112:13: warning: use range-based for loop instead [modernize-loop-convert]
            for(setMap_t::iterator i = setMap.begin();
            ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               (auto & i : setMap)
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:112:16: note: FIX-IT applied suggested code changes
            for(setMap_t::iterator i = setMap.begin();
               ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:116:37: note: FIX-IT applied suggested code changes
                                    i->first.c_str(),
                                    ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:117:57: note: FIX-IT applied suggested code changes
                                    (unsigned long long)i->second->size());
                                                        ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:119:24: note: FIX-IT applied suggested code changes
                delete(i->second);
                       ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:112:17: warning: use auto when declaring iterators [modernize-use-auto]
            for(setMap_t::iterator i = setMap.begin();
                ^
note: this fix will not be applied because it overlaps with another fix
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:123:9: warning: Potential leak of memory pointed to by 'output_file' [clang-analyzer-cplusplus.NewDeleteLeaks]
        setMap.clear();
        ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:106:13: note: Assuming the condition is true
        if (!setMap.empty()) {
            ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:106:9: note: Taking true branch
        if (!setMap.empty()) {
        ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:108:40: note: Memory is allocated
            SST::Output* output_file = new SST::Output("",0,0,
                                       ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:112:13: note: Loop condition is false. Execution continues on line 123
            for(setMap_t::iterator i = setMap.begin();
            ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.cc:123:9: note: Potential leak of memory pointed to by 'output_file'
        setMap.clear();
        ^
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.cc:23:70: warning: parameter 'params' is unused [misc-unused-parameters]
TestNetworkInspector::TestNetworkInspector(ComponentId_t id, Params& params, const std::string& sub_id) :
                                                                     ^~~~~~
                                                                      /*params*/
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.cc:23:70: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.cc:34:71: warning: parameter 'req' is unused [misc-unused-parameters]
void TestNetworkInspector::inspectNetworkData(SimpleNetwork::Request* req) {
                                                                      ^~~
                                                                       /*req*/
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.cc:34:71: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:48:27: warning: parameter 'params' is unused [misc-unused-parameters]
    single_arb_rr(Params& params) :
                          ^~~~~~
                           /*params*/
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:48:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:54:27: warning: parameter 'params' is unused [misc-unused-parameters]
    single_arb_rr(Params& params, int16_t size) :
                          ^~~~~~
                           /*params*/
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:54:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:60:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~single_arb_rr() { }
    ^                ~~~
                     = default;
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:60:22: note: FIX-IT applied suggested code changes
    ~single_arb_rr() { }
                     ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:54:28: warning: parameter 'params' is unused [misc-unused-parameters]
    single_arb_lru(Params& params) :
                           ^~~~~~
                            /*params*/
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:54:28: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:60:28: warning: parameter 'params' is unused [misc-unused-parameters]
    single_arb_lru(Params& params, int16_t size) :
                           ^~~~~~
                            /*params*/
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:60:28: note: FIX-IT applied suggested code changes
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: warning: Potential leak of memory pointed to by 'loader' [clang-analyzer-cplusplus.NewDeleteLeaks]
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb.h:32:5: note: Calling 'BuilderLibrary::addBuilder'
    SST_ELI_REGISTER_MODULE_API(SST::Merlin::SingleArbitration,int16_t)
    ^
/usr/local/include/sst/core/module.h:46:5: note: expanded from macro 'SST_ELI_REGISTER_MODULE_API'
    SST_ELI_NEW_BASE_CTOR(SST::Params&,##__VA_ARGS__)
    ^
/usr/local/include/sst/core/eli/elementbuilder.h:411:3: note: expanded from macro 'SST_ELI_NEW_BASE_CTOR'
  SST_ELI_BUILDER_FXNS()
  ^
/usr/local/include/sst/core/eli/elementbuilder.h:360:12: note: expanded from macro 'SST_ELI_BUILDER_FXNS'
    return getBuilderLibrary(elemlib)->addBuilder(elem,builder); \
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:62:12: note: Calling 'BuilderLibrary::addLoader'
    return addLoader(name_, elem, fact);
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:131:17: note: Memory is allocated
  auto loader = new BuilderLoader<Base,BaseBuilder,CtorArgs...>(elemlib, elem, fact);
                ^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: note: Potential leak of memory pointed to by 'loader'
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:53:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~offered_load_event() {  }
            ^                     ~~~~
                                  = default;
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:53:35: note: FIX-IT applied suggested code changes
    virtual ~offered_load_event() {  }
                                  ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:86:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~offered_load_complete_event() {  }
            ^                              ~~~~
                                           = default;
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:86:44: note: FIX-IT applied suggested code changes
    virtual ~offered_load_complete_event() {  }
                                           ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:88:48: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual offered_load_complete_event* clone(void)  override {
                                               ^~~~
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:88:48: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:89:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        offered_load_complete_event *ret = new offered_load_complete_event(*this);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:89:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:205:25: warning: use nullptr [modernize-use-nullptr]
    timing_link->send(0,NULL);
                        ^~~~
                        nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:205:25: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:206:29: warning: use nullptr [modernize-use-nullptr]
    end_link->send(end_time,NULL);
                            ^~~~
                            nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:206:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:228:24: warning: use nullptr [modernize-use-nullptr]
        while ( req != NULL ) {
                       ^~~~
                       nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:228:24: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:229:13: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
            offered_load_complete_event* ev = static_cast<offered_load_complete_event*>(req->takePayload());
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
            auto
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:229:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:258:17: warning: use nullptr [modernize-use-nullptr]
    if ( req != NULL ) {
                ^~~~
                nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:258:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:280:30: warning: parameter 'vn' is unused [misc-unused-parameters]
OfferedLoad::send_notify(int vn)
                             ^~
                              /*vn*/
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:280:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:297:53: warning: use nullptr [modernize-use-nullptr]
        timing_link->send(next_time - current_time, NULL);
                                                    ^~~~
                                                    nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:297:53: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:304:35: warning: parameter 'ev' is unused [misc-unused-parameters]
OfferedLoad::output_timing(Event* ev)
                                  ^~
                                   /*ev*/
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:304:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:322:53: warning: use nullptr [modernize-use-nullptr]
        timing_link->send(next_time - current_time, NULL);
                                                    ^~~~
                                                    nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:322:53: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:331:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        offered_load_event* ev = new offered_load_event(next_time);
        ^~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:331:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:333:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        SimpleNetwork::Request* req = new SimpleNetwork::Request(packetDestGen->getNextValue(), id, packet_size, true, true, ev);
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:333:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:342:33: warning: parameter 'ev' is unused [misc-unused-parameters]
OfferedLoad::end_handler(Event* ev) {
                                ^~
                                 /*ev*/
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:342:33: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:384:65: warning: use nullptr [modernize-use-nullptr]
        end_link->send(drain_time + warmup_time + collect_time, NULL);
                                                                ^~~~
                                                                nullptr
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.cc:384:65: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:67:134: warning: use nullptr [modernize-use-nullptr]
        {"PacketDest:pattern",                    "Address pattern to be used (NearestNeighbor, Uniform, HotSpot, Normal, Binomial)",NULL},
                                                                                                                                     ^~~~
                                                                                                                                     nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:67:134: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:78:117: warning: use nullptr [modernize-use-nullptr]
        {"PacketSize:pattern",                    "Address pattern to be used (Uniform, HotSpot, Normal, Binomial)",NULL},
                                                                                                                    ^~~~
                                                                                                                    nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:78:117: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:88:117: warning: use nullptr [modernize-use-nullptr]
        {"PacketDelay:pattern",                   "Address pattern to be used (Uniform, HotSpot, Normal, Binomial)",NULL},
                                                                                                                    ^~~~
                                                                                                                    nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:88:117: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:122:34: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
        virtual int getNextValue(void) = 0;
                                 ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:122:34: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:154:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        int getNextValue(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:154:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:182:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        int getNextValue(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:182:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:215:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        int getNextValue(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:215:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:254:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        int getNextValue(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:254:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:283:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        int getNextValue(void)
                         ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:283:26: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:35: warning: parameter 'max' is unused [misc-unused-parameters]
        BinomialDist(int min, int max, int trials, float probability) : minValue(min)
                                  ^~~
                                   /*max*/
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:44: warning: parameter 'trials' is unused [misc-unused-parameters]
        BinomialDist(int min, int max, int trials, float probability) : minValue(min)
                                           ^~~~~~
                                            /*trials*/
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:44: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:58: warning: parameter 'probability' is unused [misc-unused-parameters]
        BinomialDist(int min, int max, int trials, float probability) : minValue(min)
                                                         ^~~~~~~~~~~
                                                          /*probability*/
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:300:58: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:304:34: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
        virtual int getNextValue(void)
                                 ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:304:34: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:367:23: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    int getPacketDest(void);
                      ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:367:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:368:23: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    int getPacketSize(void);
                      ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:368:23: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:369:28: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
    int getDelayNextPacket(void);
                           ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:369:28: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:20:10: warning: inclusion of deprecated C++ header 'signal.h'; consider using 'csignal' instead [modernize-deprecated-headers]
#include <signal.h>
         ^~~~~~~~~~
         <csignal>
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:20:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:44:19: warning: use nullptr [modernize-use-nullptr]
    packetDestGen(NULL),
                  ^~~~
                  nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:44:19: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:45:19: warning: use nullptr [modernize-use-nullptr]
    packetSizeGen(NULL),
                  ^~~~
                  nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:45:19: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:46:20: warning: use nullptr [modernize-use-nullptr]
    packetDelayGen(NULL)
                   ^~~~
                   nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:46:20: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:148:22: warning: use nullptr [modernize-use-nullptr]
    Generator* gen = NULL;
                     ^~~~
                     nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:148:22: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:154:5: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
    uint32_t rng_seed = params.find<uint32_t>(prefix + ":Seed", 1010101);
    ^~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:154:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:165:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        float targetProb = params.find<float>(prefix + ":HotSpot:targetProbability");
        ^~~~~
        auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:165:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:168:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        float mean = params.find<float>(prefix + ":Normal:Mean", range.second/2.0f);
        ^~~~~
        auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:168:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:169:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        float sigma = params.find<float>(prefix + ":Normal:Sigma", 1.0f);
        ^~~~~
        auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:169:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:172:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        float lambda = params.find<float>(prefix + ":Exponential:Lambda", range.first);
        ^~~~~
        auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:172:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:176:9: warning: use auto when initializing with a template cast to avoid duplicating the type name [modernize-use-auto]
        float probability = params.find<float>(prefix + ":Binomial:Sigma", 0.5f);
        ^~~~~
        auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:176:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:207:35: warning: parameter 'cycle' is unused [misc-unused-parameters]
TrafficGen::clock_handler(Cycle_t cycle)
                                  ^~~~~
                                   /*cycle*/
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:207:35: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:226:17: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
                SimpleNetwork::Request* req = new SimpleNetwork::Request();
                ^~~~~~~~~~~~~~~~~~~~~~
                auto
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:226:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:265:9: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
        uint8_t x[4];
        ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:291:9: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
        uint8_t x[4];
        ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:310:17: warning: use nullptr [modernize-use-nullptr]
    if ( req != NULL ) {
                ^~~~
                nullptr
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:310:17: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:319:29: warning: parameter 'vn' is unused [misc-unused-parameters]
TrafficGen::send_notify(int vn)
                            ^~
                             /*vn*/
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:319:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:326:31: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
int TrafficGen::getPacketDest(void)
                              ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:326:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:334:31: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
int TrafficGen::getPacketSize(void)
                              ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:334:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:344:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
int TrafficGen::getDelayNextPacket(void)
                                   ^~~~
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.cc:344:36: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:64:9: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
        priority_entry_t() 
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:66:9: note: FIX-IT applied suggested code changes
        {}
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:71:13: warning: member initializer for 'next_port' is redundant [modernize-use-default-member-init]
            next_port(0),
            ^~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:71:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:72:13: warning: member initializer for 'next_vc' is redundant [modernize-use-default-member-init]
            next_vc(0),
            ^~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:72:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:73:13: warning: member initializer for 'injection_time' is redundant [modernize-use-default-member-init]
            injection_time(0),
            ^~~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:73:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:74:13: warning: member initializer for 'size_in_flits' is redundant [modernize-use-default-member-init]
            size_in_flits(0)
            ^~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:74:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:105:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::priority_queue<priority_entry_t*, std::vector<priority_entry_t*>, xbar_arb_age::time_priority> age_queue_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using age_queue_t = std::priority_queue<priority_entry_t *, std::vector<priority_entry_t *>, xbar_arb_age::time_priority>
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:105:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:53:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::pair<uint16_t,uint16_t> priority_entry_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using priority_entry_t = std::pair<uint16_t, uint16_t>
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:53:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:54:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    priority_entry_t* priority[2];
    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:53:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
    typedef std::pair<uint16_t,uint16_t> priority_entry_t;
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    using priority_entry_t = std::pair<uint16_t, uint16_t>
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:53:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:54:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    priority_entry_t* priority[2];
    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:66:9: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
        priority_entry_t() 
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:68:9: note: FIX-IT applied suggested code changes
        {}
        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:73:13: warning: member initializer for 'next_port' is redundant [modernize-use-default-member-init]
            next_port(0),
            ^~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:73:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:74:13: warning: member initializer for 'next_vc' is redundant [modernize-use-default-member-init]
            next_vc(0),
            ^~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:74:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:75:13: warning: member initializer for 'rand_pri' is redundant [modernize-use-default-member-init]
            rand_pri(0.0),
            ^~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:75:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:76:13: warning: member initializer for 'size_in_flits' is redundant [modernize-use-default-member-init]
            size_in_flits(0)
            ^~~~~~~~~~~~~~~~
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:76:13: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/merlin.cc:39:1: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
char pymerlin[] = {
^
/home/sabbir/sst-elements-org/merlin/merlin.cc:43:1: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
char pymerlin_base[] = {
^
/home/sabbir/sst-elements-org/merlin/merlin.cc:47:1: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
char pymerlin_topology[] = {
^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: warning: Potential leak of memory pointed to by 'loader' [clang-analyzer-cplusplus.NewDeleteLeaks]
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/router.h:481:5: note: Calling 'BuilderLibrary::addBuilder'
    SST_ELI_REGISTER_SUBCOMPONENT_API(SST::Merlin::XbarArbitration)
    ^
/usr/local/include/sst/core/subcomponent.h:73:5: note: expanded from macro 'SST_ELI_REGISTER_SUBCOMPONENT_API'
    SST_ELI_NEW_BASE_CTOR(SST::ComponentId_t,SST::Params&,##__VA_ARGS__)
    ^
/usr/local/include/sst/core/eli/elementbuilder.h:411:3: note: expanded from macro 'SST_ELI_NEW_BASE_CTOR'
  SST_ELI_BUILDER_FXNS()
  ^
/usr/local/include/sst/core/eli/elementbuilder.h:360:12: note: expanded from macro 'SST_ELI_BUILDER_FXNS'
    return getBuilderLibrary(elemlib)->addBuilder(elem,builder); \
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:62:12: note: Calling 'BuilderLibrary::addLoader'
    return addLoader(name_, elem, fact);
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:131:17: note: Memory is allocated
  auto loader = new BuilderLoader<Base,BaseBuilder,CtorArgs...>(elemlib, elem, fact);
                ^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: note: Potential leak of memory pointed to by 'loader'
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/bridge.h:128:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    Nic_t interfaces[2];
    ^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: warning: Potential leak of memory pointed to by 'loader' [clang-analyzer-cplusplus.NewDeleteLeaks]
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/bridge.h:84:9: note: Calling 'BuilderLibrary::addBuilder'
        SST_ELI_REGISTER_SUBCOMPONENT_API(SST::Merlin::Bridge::Translator, Bridge*)
        ^
/usr/local/include/sst/core/subcomponent.h:73:5: note: expanded from macro 'SST_ELI_REGISTER_SUBCOMPONENT_API'
    SST_ELI_NEW_BASE_CTOR(SST::ComponentId_t,SST::Params&,##__VA_ARGS__)
    ^
/usr/local/include/sst/core/eli/elementbuilder.h:411:3: note: expanded from macro 'SST_ELI_NEW_BASE_CTOR'
  SST_ELI_BUILDER_FXNS()
  ^
/usr/local/include/sst/core/eli/elementbuilder.h:360:12: note: expanded from macro 'SST_ELI_BUILDER_FXNS'
    return getBuilderLibrary(elemlib)->addBuilder(elem,builder); \
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:62:12: note: Calling 'BuilderLibrary::addLoader'
    return addLoader(name_, elem, fact);
           ^
/usr/local/include/sst/core/eli/elementbuilder.h:131:17: note: Memory is allocated
  auto loader = new BuilderLoader<Base,BaseBuilder,CtorArgs...>(elemlib, elem, fact);
                ^
/usr/local/include/sst/core/eli/elementbuilder.h:132:3: note: Potential leak of memory pointed to by 'loader'
  return ELI::LoadedLibraries::addLoader(elemlib, elem, loader);
  ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:20:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:20:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:55:23: warning: Division by zero [clang-analyzer-core.DivideZero]
    group_id = rtr_id / params.a;
                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:37:26: note: Calling 'Params::find'
    params.a = (uint32_t)p.find<int>("dragonfly:routers_per_group");
                         ^
/usr/local/include/sst/core/params.h:335:9: note: 'default_value' initialized to 0
        T default_value = T();
        ^
/usr/local/include/sst/core/params.h:336:32: note: Passing the value 0 via 2nd parameter 'default_value'
        return find_impl<T>(k, default_value, tmp);
                               ^
/usr/local/include/sst/core/params.h:336:16: note: Calling 'Params::find_impl'
        return find_impl<T>(k, default_value, tmp);
               ^
/usr/local/include/sst/core/params.h:109:14: note: Assuming 'found' is false
        if ( !found ) {
             ^
/usr/local/include/sst/core/params.h:109:9: note: Taking true branch
        if ( !found ) {
        ^
/usr/local/include/sst/core/params.h:110:13: note: Returning zero (loaded from 'default_value')
            return default_value;
            ^
/usr/local/include/sst/core/params.h:336:16: note: Returning from 'Params::find_impl'
        return find_impl<T>(k, default_value, tmp);
               ^
/usr/local/include/sst/core/params.h:336:9: note: Returning zero
        return find_impl<T>(k, default_value, tmp);
        ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:37:26: note: Returning from 'Params::find'
    params.a = (uint32_t)p.find<int>("dragonfly:routers_per_group");
                         ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:37:5: note: The value 0 is assigned to field 'a'
    params.a = (uint32_t)p.find<int>("dragonfly:routers_per_group");
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:44:10: note: Assuming the condition is false
    if ( !route_algo.compare("valiant") ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:44:5: note: Taking false branch
    if ( !route_algo.compare("valiant") ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:55:23: note: Division by zero
    group_id = rtr_id / params.a;
                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:62:24: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
topo_dragonfly_legacy::~topo_dragonfly_legacy()
                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:63:1: note: FIX-IT applied suggested code changes
{
^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:69:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_legacy_event *td_ev = static_cast<topo_dragonfly_legacy_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:69:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:119:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_legacy_event *td_ev = new topo_dragonfly_legacy_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:119:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:131:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_legacy_event *td_ev = static_cast<topo_dragonfly_legacy_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:131:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:174:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_legacy_event *td_ev = new topo_dragonfly_legacy_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.cc:174:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:119:5: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
    topo_dragonfly_legacy_event() { }
    ^                             ~~~
                                  = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:119:35: note: FIX-IT applied suggested code changes
    topo_dragonfly_legacy_event() { }
                                  ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:121:5: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    ~topo_dragonfly_legacy_event() { }
    ^                              ~~~
                                   = default;
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:121:36: note: FIX-IT applied suggested code changes
    ~topo_dragonfly_legacy_event() { }
                                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:123:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event *clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:123:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:129:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:19:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:19:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:43:22: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    port_start = new int[dimensions][2];
                     ^
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:101:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        topo_torus_event *tt_ev = static_cast<topo_torus_event*>(ev);
        ^~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:101:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:146:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_torus_event* tt_ev = new topo_torus_event(dimensions);
    ^~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:146:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:163:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        topo_torus_event *tt_ev = static_cast<topo_torus_event*>(ev);
        ^~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:163:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:199:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_torus_event* tt_ev = new topo_torus_event(dimensions);
    ^~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:199:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:250:41: warning: use nullptr [modernize-use-nullptr]
        output[i] = strtol(sub.c_str(), NULL, 0);
                                        ^~~~
                                        nullptr
/home/sabbir/sst-elements-org/merlin/topology/torus.cc:250:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.h:102:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:19:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:19:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:43:22: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    port_start = new int[dimensions][2];
                     ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:96:9: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
        topo_mesh_event *tt_ev = static_cast<topo_mesh_event*>(ev);
        ^~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:96:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:132:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_mesh_event* tt_ev = new topo_mesh_event(dimensions);
    ^~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:132:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:147:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_mesh_init_event *tt_ev = static_cast<topo_mesh_init_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:147:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:191:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_mesh_init_event* tt_ev = new topo_mesh_init_event(dimensions);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:191:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:259:41: warning: use nullptr [modernize-use-nullptr]
        output[i] = strtol(sub.c_str(), NULL, 0);
                                        ^~~~
                                        nullptr
/home/sabbir/sst-elements-org/merlin/topology/mesh.cc:259:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:129:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:19:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:19:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:54:41: warning: use nullptr [modernize-use-nullptr]
        downs[i] = strtol(down.c_str(), NULL, 0);
                                        ^~~~
                                        nullptr
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:54:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:55:37: warning: use nullptr [modernize-use-nullptr]
        ups[i] = strtol(up.c_str(), NULL, 0);
                                    ^~~~
                                    nullptr
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:55:37: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:127:18: warning: Potential leak of memory pointed to by 'routers_per_level' [clang-analyzer-cplusplus.NewDeleteLeaks]
    down_ports = downs[rtr_level];
                 ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:73:5: note: Taking false branch
    if ( routing_alg == "adaptive" ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:22: note: Assuming 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:5: note: Loop condition is false. Execution continues on line 98
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:98:30: note: Memory is allocated
    int* routers_per_level = new int[levels];
                             ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:22: note: 'i' is >= 'levels'
    for ( int i = 1; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:5: note: Loop condition is false. Execution continues on line 109
    for ( int i = 1; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:22: note: 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:5: note: Loop condition is false. Execution continues on line 127
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:127:18: note: Potential leak of memory pointed to by 'routers_per_level'
    down_ports = downs[rtr_level];
                 ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:128:14: warning: Potential leak of memory pointed to by 'ups' [clang-analyzer-cplusplus.NewDeleteLeaks]
    up_ports = ups[rtr_level];
             ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:73:5: note: Taking false branch
    if ( routing_alg == "adaptive" ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:82:16: note: Memory is allocated
    int* ups = new int[levels];
               ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:22: note: Assuming 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:5: note: Loop condition is false. Execution continues on line 98
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:22: note: 'i' is >= 'levels'
    for ( int i = 1; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:5: note: Loop condition is false. Execution continues on line 109
    for ( int i = 1; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:22: note: 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:5: note: Loop condition is false. Execution continues on line 127
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:128:14: note: Potential leak of memory pointed to by 'ups'
    up_ports = ups[rtr_level];
             ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:135:23: warning: Potential leak of memory pointed to by 'downs' [clang-analyzer-cplusplus.NewDeleteLeaks]
    down_route_factor = rid / downs[rtr_level];
                      ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:73:5: note: Taking false branch
    if ( routing_alg == "adaptive" ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:83:17: note: Memory is allocated
    int* downs= new int[levels];
                ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:22: note: Assuming 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:93:5: note: Loop condition is false. Execution continues on line 98
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:22: note: 'i' is >= 'levels'
    for ( int i = 1; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:101:5: note: Loop condition is false. Execution continues on line 109
    for ( int i = 1; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:22: note: 'i' is >= 'levels'
    for ( int i = 0; i < levels; i++ ) {
                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:112:5: note: Loop condition is false. Execution continues on line 127
    for ( int i = 0; i < levels; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:132:5: note: Loop condition is false. Execution continues on line 135
    for ( int i = 0; i <= rtr_level; i++ ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:135:23: note: Potential leak of memory pointed to by 'downs'
    down_route_factor = rid / downs[rtr_level];
                      ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:154:15: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
topo_fattree::~topo_fattree()
              ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:155:1: note: FIX-IT applied suggested code changes
{
^
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:158:30: warning: parameter 'port' is unused [misc-unused-parameters]
void topo_fattree::route(int port, int vc, internal_router_event* ev)  {
                             ^~~~
                              /*port*/
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:158:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:158:40: warning: parameter 'vc' is unused [misc-unused-parameters]
void topo_fattree::route(int port, int vc, internal_router_event* ev)  {
                                       ^~
                                        /*vc*/
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:158:40: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:171:32: warning: parameter 'port' is unused [misc-unused-parameters]
void topo_fattree::reroute(int port, int vc, internal_router_event* ev)
                               ^~~~
                                /*port*/
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:171:32: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:171:42: warning: parameter 'vc' is unused [misc-unused-parameters]
void topo_fattree::reroute(int port, int vc, internal_router_event* ev)
                                         ^~
                                          /*vc*/
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:171:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:220:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    internal_router_event* ire = new internal_router_event(ev);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/fattree.cc:220:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:23:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:23:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:91:62: warning: use nullptr [modernize-use-nullptr]
            global_link_map.push_back(strtol(substr.c_str(), NULL, 0));
                                                             ^~~~
                                                             nullptr
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:91:62: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:151:17: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
topo_dragonfly::~topo_dragonfly()
                ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:152:1: note: FIX-IT applied suggested code changes
{
^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:158:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_event *td_ev = static_cast<topo_dragonfly_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:158:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:247:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_event *td_ev = static_cast<topo_dragonfly_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:247:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:404:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_event *td_ev = new topo_dragonfly_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:404:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:425:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_event *td_ev = static_cast<topo_dragonfly_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:425:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:494:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly_event *td_ev = new topo_dragonfly_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:494:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:564:77: warning: parameter 'id' is unused [misc-unused-parameters]
uint32_t topo_dragonfly::port_for_group(uint32_t group, uint32_t slice, int id)
                                                                            ^~
                                                                             /*id*/
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.cc:564:77: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:17:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:17:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:27:65: warning: parameter 'params' is unused [misc-unused-parameters]
topo_singlerouter::topo_singlerouter(ComponentId_t cid, Params& params, int num_ports, int rtr_id) :
                                                                ^~~~~~
                                                                 /*params*/
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:27:65: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:27:92: warning: parameter 'rtr_id' is unused [misc-unused-parameters]
topo_singlerouter::topo_singlerouter(ComponentId_t cid, Params& params, int num_ports, int rtr_id) :
                                                                                           ^~~~~~
                                                                                            /*rtr_id*/
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:27:92: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:33:20: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
topo_singlerouter::~topo_singlerouter()
                   ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:34:1: note: FIX-IT applied suggested code changes
{
^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:38:30: warning: parameter 'port' is unused [misc-unused-parameters]
topo_singlerouter::route(int port, int vc, internal_router_event* ev)
                             ^~~~
                              /*port*/
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:38:30: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:38:40: warning: parameter 'vc' is unused [misc-unused-parameters]
topo_singlerouter::route(int port, int vc, internal_router_event* ev)
                                       ^~
                                        /*vc*/
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:38:40: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:47:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    internal_router_event* ire = new internal_router_event(ev);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.cc:47:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/torus.h:102:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    int (* port_start)[2]; // port_start[dim][direction: 0=pos, 1=neg]
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:23:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:23:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:97:62: warning: use nullptr [modernize-use-nullptr]
            global_link_map.push_back(strtol(substr.c_str(), NULL, 0));
                                                             ^~~~
                                                             nullptr
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:97:62: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:157:18: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
topo_dragonfly2::~topo_dragonfly2()
                 ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:158:1: note: FIX-IT applied suggested code changes
{
^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:164:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly2_event *td_ev = static_cast<topo_dragonfly2_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:164:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:253:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly2_event *td_ev = static_cast<topo_dragonfly2_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:253:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:410:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly2_event *td_ev = new topo_dragonfly2_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:410:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:431:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly2_event *td_ev = static_cast<topo_dragonfly2_event*>(ev);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:431:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:500:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_dragonfly2_event *td_ev = new topo_dragonfly2_event(dstAddr);
    ^~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:500:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:570:78: warning: parameter 'id' is unused [misc-unused-parameters]
uint32_t topo_dragonfly2::port_for_group(uint32_t group, uint32_t slice, int id)
                                                                             ^~
                                                                              /*id*/
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.cc:570:78: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:21:10: warning: inclusion of deprecated C++ header 'stdlib.h'; consider using 'cstdlib' instead [modernize-deprecated-headers]
#include <stdlib.h>
         ^~~~~~~~~~
         <cstdlib>
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:21:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:137:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_hyperx_event *tt_ev = static_cast<topo_hyperx_event*>(ev);
    ^~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:137:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:146:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
    topo_hyperx_event* tt_ev = static_cast<topo_hyperx_event*>(ev);
    ^~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:146:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:186:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_hyperx_event* tt_ev = new topo_hyperx_event(dimensions);
    ^~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:186:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:263:5: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
    topo_hyperx_init_event* tt_ev = new topo_hyperx_init_event(dimensions);
    ^~~~~~~~~~~~~~~~~~~~~~
    auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:263:5: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:311:41: warning: use nullptr [modernize-use-nullptr]
        output[i] = strtol(sub.c_str(), NULL, 0);
                                        ^~~~
                                        nullptr
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:311:41: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:333:51: warning: parameter 'num_ports' is unused [misc-unused-parameters]
topo_hyperx::choose_multipath(int start_port, int num_ports)
                                                  ^~~~~~~~~
                                                   /*num_ports*/
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:333:51: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:397:27: warning: parameter 'port' is unused [misc-unused-parameters]
topo_hyperx::routeDOR(int port, int vc, topo_hyperx_event* ev) {
                          ^~~~
                           /*port*/
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:397:27: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:413:29: warning: parameter 'port' is unused [misc-unused-parameters]
topo_hyperx::routeDORND(int port, int vc, topo_hyperx_event* ev) {
                            ^~~~
                             /*port*/
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:413:29: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:433:5: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
    ev->setNextPort(min_port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:147:10: note: Assuming field 'rerouted' is false
    if ( tt_ev->rerouted ) return;
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:147:5: note: Taking false branch
    if ( tt_ev->rerouted ) return;
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:150:10: note: Assuming field 'algorithm' is not equal to DOR
    if ( algorithm == DOR ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:150:5: note: Taking false branch
    if ( algorithm == DOR ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:154:10: note: Assuming field 'algorithm' is equal to DORND
    if ( algorithm == DORND ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:154:5: note: Taking true branch
    if ( algorithm == DORND ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:155:16: note: Calling 'topo_hyperx::routeDORND'
        return routeDORND(port,vc,tt_ev);
               ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:416:10: note: Assuming the condition is false
    if ( next_port.first == -1 ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:416:5: note: Taking false branch
    if ( next_port.first == -1 ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:424:5: note: 'min_port' declared without an initial value
    int min_port;
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:426:5: note: Loop condition is false. Execution continues on line 433
    for ( int p = next_port.second; p < next_port.second + dim_width[next_port.first]; ++p ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:433:5: note: 1st function call argument is an uninitialized value
    ev->setNextPort(min_port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:440:31: warning: parameter 'port' is unused [misc-unused-parameters]
topo_hyperx::routeValiant(int port, int vc, topo_hyperx_event* ev) {
                              ^~~~
                               /*port*/
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:440:31: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:475:28: warning: parameter 'port' is unused [misc-unused-parameters]
topo_hyperx::routeDOAL(int port, int vc, topo_hyperx_event* ev) {
                           ^~~~
                            /*port*/
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:475:28: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:510:17: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]
                ev->setNextPort(min_port);
                ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:147:10: note: Assuming field 'rerouted' is false
    if ( tt_ev->rerouted ) return;
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:147:5: note: Taking false branch
    if ( tt_ev->rerouted ) return;
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:150:10: note: Assuming field 'algorithm' is not equal to DOR
    if ( algorithm == DOR ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:150:5: note: Taking false branch
    if ( algorithm == DOR ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:154:10: note: Assuming field 'algorithm' is not equal to DORND
    if ( algorithm == DORND ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:154:5: note: Taking false branch
    if ( algorithm == DORND ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:158:10: note: Assuming field 'algorithm' is not equal to MINA
    if ( algorithm == MINA ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:158:5: note: Taking false branch
    if ( algorithm == MINA ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:162:15: note: Assuming field 'algorithm' is not equal to VALIANT
    else if ( algorithm == VALIANT ) {
              ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:162:10: note: Taking false branch
    else if ( algorithm == VALIANT ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:166:15: note: Assuming field 'algorithm' is equal to DOAL
    else if ( algorithm == DOAL ) {
              ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:166:10: note: Taking true branch
    else if ( algorithm == DOAL ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:167:16: note: Calling 'topo_hyperx::routeDOAL'
        return routeDOAL(port,vc,tt_ev);
               ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:479:10: note: Assuming 'dest_router' is not equal to field 'router_id'
    if ( dest_router == router_id ) {
         ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:479:5: note: Taking false branch
    if ( dest_router == router_id ) {
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:485:29: note: Assuming 'dim' is < field 'dimensions'
        for ( int dim = 0 ; dim < dimensions ; dim++ ) {
                            ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:485:9: note: Loop condition is true.  Entering loop body
        for ( int dim = 0 ; dim < dimensions ; dim++ ) {
        ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:486:18: note: Assuming the condition is false
            if ( ev->dest_loc[dim] == id_loc[dim] ) continue;
                 ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:486:13: note: Taking false branch
            if ( ev->dest_loc[dim] == id_loc[dim] ) continue;
            ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:493:18: note: Assuming the condition is true
            if ( (vc & 0x1) == 1 ) {
                 ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:493:13: note: Taking true branch
            if ( (vc & 0x1) == 1 ) {
            ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:495:52: note: Assuming the condition is false
                int offset = ev->dest_loc[dim] - ((ev->dest_loc[dim] > id_loc[dim]) ? 1 : 0);
                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:495:51: note: '?' condition is false
                int offset = ev->dest_loc[dim] - ((ev->dest_loc[dim] > id_loc[dim]) ? 1 : 0);
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:500:17: note: 'min_port' declared without an initial value
                int min_port;
                ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:502:57: note: Assuming the condition is false
                for ( int p = port_start[dim] + offset; p < port_start[dim] + offset + dim_width[dim]; ++p ) {
                                                        ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:502:17: note: Loop condition is false. Execution continues on line 510
                for ( int p = port_start[dim] + offset; p < port_start[dim] + offset + dim_width[dim]; ++p ) {
                ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.cc:510:17: note: 1st function call argument is an uninitialized value
                ev->setNextPort(min_port);
                ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:27:10: warning: inclusion of deprecated C++ header 'string.h'; consider using 'cstring' instead [modernize-deprecated-headers]
#include <string.h>
         ^~~~~~~~~~
         <cstring>
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:27:10: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:59:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:59:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:61:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        topo_hyperx_event* tte = new topo_hyperx_event(*this);
        ^~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:61:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:113:13: warning: use '= default' to define a trivial destructor [modernize-use-equals-default]
    virtual ~topo_hyperx_init_event() { }
            ^                         ~~~
                                      = default;
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:113:39: note: FIX-IT applied suggested code changes
    virtual ~topo_hyperx_init_event() { }
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:114:42: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
    virtual internal_router_event* clone(void) override
                                         ^~~~
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:114:42: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:116:9: warning: use auto when initializing with new to avoid duplicating the type name [modernize-use-auto]
        topo_hyperx_init_event* tte = new topo_hyperx_init_event(*this);
        ^~~~~~~~~~~~~~~~~~~~~~
        auto
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:116:9: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/bridge.h:73:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~Bridge();
    ^
              override
/home/sabbir/sst-elements-org/merlin/bridge.h:73:14: note: FIX-IT applied suggested code changes
    ~Bridge();
             ^
/home/sabbir/sst-elements-org/merlin/bridge.h:74:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int);
         ^
                            override
/home/sabbir/sst-elements-org/merlin/bridge.h:74:28: note: FIX-IT applied suggested code changes
    void init(unsigned int);
                           ^
/home/sabbir/sst-elements-org/merlin/bridge.h:75:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/bridge.h:75:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/bridge.h:76:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/bridge.h:76:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/bridge.h:87:22: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual void init(unsigned int) { }
        ~~~~~~~~     ^
                                        override
/home/sabbir/sst-elements-org/merlin/bridge.h:87:9: note: FIX-IT applied suggested code changes
        virtual void init(unsigned int) { }
        ^
/home/sabbir/sst-elements-org/merlin/bridge.h:87:40: note: FIX-IT applied suggested code changes
        virtual void init(unsigned int) { }
                                       ^
/home/sabbir/sst-elements-org/merlin/bridge.h:88:22: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual void setup() { }
        ~~~~~~~~     ^
                             override
/home/sabbir/sst-elements-org/merlin/bridge.h:88:9: note: FIX-IT applied suggested code changes
        virtual void setup() { }
        ^
/home/sabbir/sst-elements-org/merlin/bridge.h:88:29: note: FIX-IT applied suggested code changes
        virtual void setup() { }
                            ^
/home/sabbir/sst-elements-org/merlin/bridge.h:89:22: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual void finish() { }
        ~~~~~~~~     ^
                              override
/home/sabbir/sst-elements-org/merlin/bridge.h:89:9: note: FIX-IT applied suggested code changes
        virtual void finish() { }
        ^
/home/sabbir/sst-elements-org/merlin/bridge.h:89:30: note: FIX-IT applied suggested code changes
        virtual void finish() { }
                             ^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:1: error: unknown type name 'BOOST_CLASS_EXPORT' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::internal_router_event);
^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:27:33: error: no member named 'internal_router_event' in namespace 'SST::Merlin' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::internal_router_event);
                                ^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:28:1: error: unknown type name 'BOOST_CLASS_EXPORT' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::topo_mesh_event)
^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:28:33: error: no member named 'topo_mesh_event' in namespace 'SST::Merlin' [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::topo_mesh_event)
                                ^
/home/sabbir/sst-elements-org/merlin/boostExports.cc:28:49: error: expected ';' after top level declarator [clang-diagnostic-error]
BOOST_CLASS_EXPORT(SST::Merlin::topo_mesh_event)
                                                ^
                                                ;
/home/sabbir/sst-elements-org/merlin/boostExports.cc:28:49: note: FIX-IT applied suggested code changes
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:63:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~Router() = default;
    ~~~~~~~~^
                      override 
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:63:5: note: FIX-IT applied suggested code changes
    virtual ~Router() = default;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:63:23: note: FIX-IT applied suggested code changes
    virtual ~Router() = default;
                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:127:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~RtrEvent()
    ^
                override
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:127:16: note: FIX-IT applied suggested code changes
    ~RtrEvent()
               ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:135:23: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual RtrEvent* clone()  override {
    ~~~~~~~~          ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:135:5: note: FIX-IT applied suggested code changes
    virtual RtrEvent* clone()  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:160:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:160:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:206:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:206:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:234:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:234:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:267:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:267:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:303:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~internal_router_event() {
    ~~~~~~~~^
                                     override
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:303:5: note: FIX-IT applied suggested code changes
    virtual ~internal_router_event() {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:303:37: note: FIX-IT applied suggested code changes
    virtual ~internal_router_event() {
                                    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:307:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:307:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:340:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:340:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:367:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~Topology() = default;
    ~~~~~~~~^
                        override 
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:367:5: note: FIX-IT applied suggested code changes
    virtual ~Topology() = default;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:367:25: note: FIX-IT applied suggested code changes
    virtual ~Topology() = default;
                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:438:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~PortInterface() = default;
    ~~~~~~~~^
                             override 
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:438:5: note: FIX-IT applied suggested code changes
    virtual ~PortInterface() = default;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:438:30: note: FIX-IT applied suggested code changes
    virtual ~PortInterface() = default;
                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:466:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual ~OutputArbitration() = default;
        ~~~~~~~~^
                                     override 
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:466:9: note: FIX-IT applied suggested code changes
        virtual ~OutputArbitration() = default;
        ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:466:38: note: FIX-IT applied suggested code changes
        virtual ~OutputArbitration() = default;
                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:486:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~XbarArbitration() = default;
    ~~~~~~~~^
                               override 
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:486:5: note: FIX-IT applied suggested code changes
    virtual ~XbarArbitration() = default;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../router.h:486:32: note: FIX-IT applied suggested code changes
    virtual ~XbarArbitration() = default;
                               ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:65:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~ReorderRequest() = default;
    ^
                      override 
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:65:23: note: FIX-IT applied suggested code changes
    ~ReorderRequest() = default;
                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:163:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~ReorderLinkControl();
    ^
                          override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:163:26: note: FIX-IT applied suggested code changes
    ~ReorderLinkControl();
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:173:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:173:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:174:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:174:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:175:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:175:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:179:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool send(SST::Interfaces::SimpleNetwork::Request* req, int vn);
         ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:179:68: note: FIX-IT applied suggested code changes
    bool send(SST::Interfaces::SimpleNetwork::Request* req, int vn);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:183:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool spaceToSend(int vn, int flits);
         ^
                                        override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:183:40: note: FIX-IT applied suggested code changes
    bool spaceToSend(int vn, int flits);
                                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:187:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recv(int vn);
                                             ^
                                                          override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:187:58: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recv(int vn);
                                                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:191:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool requestToReceive( int vn );
         ^
                                    override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:191:36: note: FIX-IT applied suggested code changes
    bool requestToReceive( int vn );
                                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:193:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendInitData(SST::Interfaces::SimpleNetwork::Request* ev);
         ^
                                                                   override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:193:67: note: FIX-IT applied suggested code changes
    void sendInitData(SST::Interfaces::SimpleNetwork::Request* ev);
                                                                  ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:194:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recvInitData();
                                             ^
                                                            override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:194:60: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recvInitData();
                                                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:196:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendUntimedData(SST::Interfaces::SimpleNetwork::Request* ev);
         ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:196:70: note: FIX-IT applied suggested code changes
    void sendUntimedData(SST::Interfaces::SimpleNetwork::Request* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:197:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recvUntimedData();
                                             ^
                                                               override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:197:63: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recvUntimedData();
                                                              ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:201:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setNotifyOnReceive(HandlerBase* functor);
         ^
                                                  override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:201:50: note: FIX-IT applied suggested code changes
    void setNotifyOnReceive(HandlerBase* functor);
                                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:202:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setNotifyOnSend(HandlerBase* functor);
         ^
                                               override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:202:47: note: FIX-IT applied suggested code changes
    void setNotifyOnSend(HandlerBase* functor);
                                              ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:204:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool isNetworkInitialized() const;
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:204:38: note: FIX-IT applied suggested code changes
    bool isNetworkInitialized() const;
                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:205:11: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    nid_t getEndpointID() const;
          ^
                                override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:205:32: note: FIX-IT applied suggested code changes
    nid_t getEndpointID() const;
                               ^
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:206:24: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    const UnitAlgebra& getLinkBW() const;
                       ^
                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/reorderLinkControl.h:206:41: note: FIX-IT applied suggested code changes
    const UnitAlgebra& getLinkBW() const;
                                        ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:150:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly();
    ^
                      override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:150:22: note: FIX-IT applied suggested code changes
    ~topo_dragonfly();
                     ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:152:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:152:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:152:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:153:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:153:5: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:153:70: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:154:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:154:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:154:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:156:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:156:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:156:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:157:25: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual std::string getPortLogicalGroup(int port) const;
    ~~~~~~~~            ^
                                                            override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:157:5: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:157:60: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
                                                           ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:159:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:159:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:159:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:160:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:160:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:160:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:162:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:162:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:162:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:163:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:163:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:163:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:165:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ~~~~~~~~     ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:165:5: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:165:71: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
                                                                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:190:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly_event() = default;
    ^
                            override 
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:190:29: note: FIX-IT applied suggested code changes
    ~topo_dragonfly_event() = default;
                            ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:192:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event *clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly.h:192:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event *clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:150:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly2();
    ^
                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:150:23: note: FIX-IT applied suggested code changes
    ~topo_dragonfly2();
                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:152:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:152:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:152:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:153:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:153:5: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:153:70: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:154:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:154:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:154:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:156:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:156:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:156:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:157:25: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual std::string getPortLogicalGroup(int port) const;
    ~~~~~~~~            ^
                                                            override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:157:5: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:157:60: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
                                                           ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:159:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:159:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:159:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:160:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:160:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:160:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:162:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:162:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:162:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:163:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:163:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:163:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:165:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ~~~~~~~~     ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:165:5: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:165:71: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
                                                                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:190:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly2_event() = default;
    ^
                             override 
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:190:30: note: FIX-IT applied suggested code changes
    ~topo_dragonfly2_event() = default;
                             ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:192:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event *clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly2.h:192:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event *clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:41:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~topo_mesh_event() { delete[] dest_loc; }
    ~~~~~~~~^
                               override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:41:5: note: FIX-IT applied suggested code changes
    virtual ~topo_mesh_event() { delete[] dest_loc; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:41:31: note: FIX-IT applied suggested code changes
    virtual ~topo_mesh_event() { delete[] dest_loc; }
                              ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:42:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:42:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:78:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~topo_mesh_init_event() = default;
    ~~~~~~~~^
                                    override 
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:78:5: note: FIX-IT applied suggested code changes
    virtual ~topo_mesh_init_event() = default;
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:78:37: note: FIX-IT applied suggested code changes
    virtual ~topo_mesh_init_event() = default;
                                    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:79:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:79:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:136:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_mesh();
    ^
                 override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:136:17: note: FIX-IT applied suggested code changes
    ~topo_mesh();
                ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:138:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:138:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:138:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:139:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:139:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:139:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:141:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:141:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:141:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:142:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:142:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:142:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:144:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:144:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:144:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:145:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns);
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:145:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:145:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:146:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:146:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/mesh.h:146:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:41:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_torus_event() { delete[] dest_loc; }
    ^
                        override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:41:24: note: FIX-IT applied suggested code changes
    ~topo_torus_event() { delete[] dest_loc; }
                       ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:42:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:42:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:109:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_torus();
    ^
                  override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:109:18: note: FIX-IT applied suggested code changes
    ~topo_torus();
                 ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:111:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:111:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:111:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:112:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:112:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:112:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:114:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:114:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:114:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:115:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:115:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:115:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:117:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:117:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:117:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:118:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns);
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:118:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:118:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:119:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/torus.h:119:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/torus.h:119:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:35:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~TargetGenerator() = default;
    ^
                       override 
/home/sabbir/sst-elements-org/merlin/background_traffic/../target_generator/target_generator.h:35:24: note: FIX-IT applied suggested code changes
    ~TargetGenerator() = default;
                       ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:47:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~background_traffic_event() = default;
    ~~~~~~~~^
                                        override 
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:47:5: note: FIX-IT applied suggested code changes
    virtual ~background_traffic_event() = default;
    ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:47:41: note: FIX-IT applied suggested code changes
    virtual ~background_traffic_event() = default;
                                        ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:122:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~BackgroundTraffic();
    ^
                         override
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:122:25: note: FIX-IT applied suggested code changes
    ~BackgroundTraffic();
                        ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:124:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:124:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:125:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:125:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:126:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:126:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:127:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/background_traffic/background_traffic.h:127:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:53:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~BitComplementDist() = default;
    ^
                         override 
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:53:26: note: FIX-IT applied suggested code changes
    ~BitComplementDist() = default;
                         ^
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:55:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void initialize(int id, int num_peers) {
         ^
                                           override
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:55:43: note: FIX-IT applied suggested code changes
    void initialize(int id, int num_peers) {
                                          ^
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:59:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int getNextValue() {
        ^
                       override
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:59:23: note: FIX-IT applied suggested code changes
    int getNextValue() {
                      ^
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:63:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void seed(uint32_t val) {
         ^
                            override
/home/sabbir/sst-elements-org/merlin/target_generator/bit_complement.h:63:28: note: FIX-IT applied suggested code changes
    void seed(uint32_t val) {
                           ^
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:71:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~UniformDist() {
    ^
                   override
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:71:19: note: FIX-IT applied suggested code changes
    ~UniformDist() {
                  ^
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:76:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void initialize(int id, int num_peers) {
         ^
                                           override
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:76:43: note: FIX-IT applied suggested code changes
    void initialize(int id, int num_peers) {
                                          ^
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:86:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int getNextValue() {
        ^
                       override
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:86:23: note: FIX-IT applied suggested code changes
    int getNextValue() {
                      ^
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:91:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void seed(uint32_t val) {
         ^
                            override
/home/sabbir/sst-elements-org/merlin/target_generator/uniform.h:91:28: note: FIX-IT applied suggested code changes
    void seed(uint32_t val) {
                           ^
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:77:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~route_test();
    ^
                  override
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:77:18: note: FIX-IT applied suggested code changes
    ~route_test();
                 ^
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:79:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:79:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:80:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:80:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:81:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/test/route_test/route_test.h:81:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:94:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~shift_nic();
    ^
                 override
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:94:17: note: FIX-IT applied suggested code changes
    ~shift_nic();
                ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:96:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:96:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:97:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:97:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:98:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/test/simple_patterns/shift.h:98:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/test/nic.h:97:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~nic();
    ^
           override
/home/sabbir/sst-elements-org/merlin/test/nic.h:97:11: note: FIX-IT applied suggested code changes
    ~nic();
          ^
/home/sabbir/sst-elements-org/merlin/test/nic.h:99:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/test/nic.h:99:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/test/nic.h:100:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/test/nic.h:100:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/test/nic.h:101:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/test/nic.h:101:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/test/nic.h:102:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/test/nic.h:102:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/test/nic.cc:311:18: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual void print(const std::string& header, Output &out) const  override {
    ~~~~~~~~     ^
/home/sabbir/sst-elements-org/merlin/test/nic.cc:311:5: note: FIX-IT applied suggested code changes
    virtual void print(const std::string& header, Output &out) const  override {
    ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:117:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~pt2pt_test() = default;
    ^
                  override 
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:117:19: note: FIX-IT applied suggested code changes
    ~pt2pt_test() = default;
                  ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:119:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:119:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:120:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:120:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:121:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:121:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:141:20: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual Event* clone() override
    ~~~~~~~~       ^
/home/sabbir/sst-elements-org/merlin/test/pt2pt/pt2pt_test.h:141:5: note: FIX-IT applied suggested code changes
    virtual Event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:83:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~bisection_test() = default;
    ^
                      override 
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:83:23: note: FIX-IT applied suggested code changes
    ~bisection_test() = default;
                      ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:85:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:85:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:86:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:86:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:87:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:87:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:104:20: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual Event* clone() override
    ~~~~~~~~       ^
/home/sabbir/sst-elements-org/merlin/test/bisection/bisection_test.h:104:5: note: FIX-IT applied suggested code changes
    virtual Event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../arbitration/single_arb.h:35:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~SingleArbitration() = default;
    ~~~~~~~~^
                                 override 
/home/sabbir/sst-elements-org/merlin/interfaces/../arbitration/single_arb.h:35:5: note: FIX-IT applied suggested code changes
    virtual ~SingleArbitration() = default;
    ^
/home/sabbir/sst-elements-org/merlin/interfaces/../arbitration/single_arb.h:35:34: note: FIX-IT applied suggested code changes
    virtual ~SingleArbitration() = default;
                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:81:13: error: use of undeclared identifier 'merlin_abort' [clang-diagnostic-error]
            merlin_abort.fatal(CALL_INFO_LONG,1,"output_arb_qos_multi: must specify qos_settings\n");
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:127:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~output_arb_qos_multi() {
    ^
                            override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:127:28: note: FIX-IT applied suggested code changes
    ~output_arb_qos_multi() {
                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:138:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setVCs(int n_vns, int* vcs_per_vn_in) {
         ^
                                               override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:138:47: note: FIX-IT applied suggested code changes
    void setVCs(int n_vns, int* vcs_per_vn_in) {
                                              ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:141:13: error: use of undeclared identifier 'merlin_abort' [clang-diagnostic-error]
            merlin_abort.fatal(CALL_INFO_LONG,1,"output_arb_qos_multi: size of qos_settings does not match number of vns in network\n");
            ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:157:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int arbitrate(Cycle_t cycle, PortInterface::port_queue_t* out_q, int* port_out_credits, bool isHostPort, bool& have_packets) {
        ^
                                                                                                                                 override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:157:129: note: FIX-IT applied suggested code changes
    int arbitrate(Cycle_t cycle, PortInterface::port_queue_t* out_q, int* port_out_credits, bool isHostPort, bool& have_packets) {
                                                                                                                                ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:240:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_qos_multi.h:240:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:60:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~output_arb_basic() {
    ^
                        override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:60:24: note: FIX-IT applied suggested code changes
    ~output_arb_basic() {
                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:64:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setVCs(int n_vns, int* vcs_per_vn) {
         ^
                                            override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:64:44: note: FIX-IT applied suggested code changes
    void setVCs(int n_vns, int* vcs_per_vn) {
                                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:74:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int arbitrate(Cycle_t UNUSED(cycle), PortInterface::port_queue_t* out_q, int* port_out_credits, bool isHostPort, bool& have_packets) {
        ^
                                                                                                                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:74:137: note: FIX-IT applied suggested code changes
    int arbitrate(Cycle_t UNUSED(cycle), PortInterface::port_queue_t* out_q, int* port_out_credits, bool isHostPort, bool& have_packets) {
                                                                                                                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:94:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/output_arb_basic.h:94:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:243:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendTopologyEvent(TopologyEvent* ev);
         ^
                                              override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:243:46: note: FIX-IT applied suggested code changes
    void sendTopologyEvent(TopologyEvent* ev);
                                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:246:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void send(internal_router_event* ev, int vc);
         ^
                                                 override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:246:49: note: FIX-IT applied suggested code changes
    void send(internal_router_event* ev, int vc);
                                                ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:249:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool spaceToSend(int vc, int flits);
         ^
                                        override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:249:40: note: FIX-IT applied suggested code changes
    bool spaceToSend(int vc, int flits);
                                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:252:28: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    internal_router_event* recv(int vc);
                           ^
                                        override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:252:40: note: FIX-IT applied suggested code changes
    internal_router_event* recv(int vc);
                                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:253:29: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    internal_router_event** getVCHeads() {
                            ^
                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:253:41: note: FIX-IT applied suggested code changes
    internal_router_event** getVCHeads() {
                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:260:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void initVCs(int vns, int* vcs_per_vn, internal_router_event** vc_heads, int* xbar_in_credits, int* output_queue_lengths);
         ^
                                                                                                                              override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:260:126: note: FIX-IT applied suggested code changes
    void initVCs(int vns, int* vcs_per_vn, internal_router_event** vc_heads, int* xbar_in_credits, int* output_queue_lengths);
                                                                                                                             ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:263:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~PortControl();
    ^
                   override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:263:19: note: FIX-IT applied suggested code changes
    ~PortControl();
                  ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:264:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:264:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:265:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:265:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:266:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:266:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:267:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:267:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:270:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendInitData(Event *ev);
         ^
                                 override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:270:33: note: FIX-IT applied suggested code changes
    void sendInitData(Event *ev);
                                ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:271:12: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    Event* recvInitData();
           ^
                          override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:271:26: note: FIX-IT applied suggested code changes
    Event* recvInitData();
                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:272:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendUntimedData(Event *ev);
         ^
                                    override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:272:36: note: FIX-IT applied suggested code changes
    void sendUntimedData(Event *ev);
                                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:273:12: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    Event* recvUntimedData();
           ^
                             override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:273:29: note: FIX-IT applied suggested code changes
    Event* recvUntimedData();
                            ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:275:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream);
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:275:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream);
                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:276:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void printStatus(Output& out, int out_port_busy, int in_port_busy);
         ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:276:71: note: FIX-IT applied suggested code changes
    void printStatus(Output& out, int out_port_busy, int in_port_busy);
                                                                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:279:7: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        bool decreaseLinkWidth();
             ^
                                 override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:279:26: note: FIX-IT applied suggested code changes
        bool decreaseLinkWidth();
                                ^
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:280:7: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        bool increaseLinkWidth();
             ^
                                 override
/home/sabbir/sst-elements-org/merlin/interfaces/portControl.h:280:26: note: FIX-IT applied suggested code changes
        bool increaseLinkWidth();
                                ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:189:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~LinkControl();
    ^
                   override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:189:19: note: FIX-IT applied suggested code changes
    ~LinkControl();
                  ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:199:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:199:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:200:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:200:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:201:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:201:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:202:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:202:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:206:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool send(SST::Interfaces::SimpleNetwork::Request* req, int vn);
         ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:206:68: note: FIX-IT applied suggested code changes
    bool send(SST::Interfaces::SimpleNetwork::Request* req, int vn);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:210:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool spaceToSend(int vn, int flits);
         ^
                                        override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:210:40: note: FIX-IT applied suggested code changes
    bool spaceToSend(int vn, int flits);
                                       ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:214:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recv(int vn);
                                             ^
                                                          override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:214:58: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recv(int vn);
                                                         ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:218:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    bool requestToReceive( int vn ) { return ! input_queues[vn].empty(); }
         ^
                                    override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:218:36: note: FIX-IT applied suggested code changes
    bool requestToReceive( int vn ) { return ! input_queues[vn].empty(); }
                                   ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:220:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendInitData(SST::Interfaces::SimpleNetwork::Request* ev);
         ^
                                                                   override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:220:67: note: FIX-IT applied suggested code changes
    void sendInitData(SST::Interfaces::SimpleNetwork::Request* ev);
                                                                  ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:221:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recvInitData();
                                             ^
                                                            override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:221:60: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recvInitData();
                                                           ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:223:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendUntimedData(SST::Interfaces::SimpleNetwork::Request* ev);
         ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:223:70: note: FIX-IT applied suggested code changes
    void sendUntimedData(SST::Interfaces::SimpleNetwork::Request* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:224:46: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    SST::Interfaces::SimpleNetwork::Request* recvUntimedData();
                                             ^
                                                               override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:224:63: note: FIX-IT applied suggested code changes
    SST::Interfaces::SimpleNetwork::Request* recvUntimedData();
                                                              ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:226:17: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    inline void setNotifyOnReceive(HandlerBase* functor) { receiveFunctor = functor; }
                ^
                                                         override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:226:57: note: FIX-IT applied suggested code changes
    inline void setNotifyOnReceive(HandlerBase* functor) { receiveFunctor = functor; }
                                                        ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:227:17: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    inline void setNotifyOnSend(HandlerBase* functor) { sendFunctor = functor; }
                ^
                                                      override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:227:54: note: FIX-IT applied suggested code changes
    inline void setNotifyOnSend(HandlerBase* functor) { sendFunctor = functor; }
                                                     ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:229:17: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    inline bool isNetworkInitialized() const { return network_initialized; }
                ^
                                             override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:229:45: note: FIX-IT applied suggested code changes
    inline bool isNetworkInitialized() const { return network_initialized; }
                                            ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:231:18: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    inline nid_t getEndpointID() const {
                 ^
                                       override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:231:39: note: FIX-IT applied suggested code changes
    inline nid_t getEndpointID() const {
                                      ^
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:239:31: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    inline const UnitAlgebra& getLinkBW() const { return link_bw; }
                              ^
                                                override
/home/sabbir/sst-elements-org/merlin/interfaces/linkControl.h:239:48: note: FIX-IT applied suggested code changes
    inline const UnitAlgebra& getLinkBW() const { return link_bw; }
                                               ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:123:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~xbar_arb_age() {
    ^
                    override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:123:20: note: FIX-IT applied suggested code changes
    ~xbar_arb_age() {
                   ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:127:11: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
     void setPorts(int num_ports_s, int num_vcs_s) {
          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:127:51: note: FIX-IT applied suggested code changes
     void setPorts(int num_ports_s, int num_vcs_s) {
                                                  ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:147:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void arbitrate(
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:153:21: note: FIX-IT applied suggested code changes
                   )
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:229:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void reportSkippedCycles(Cycle_t cycles) {
         ^
                                             override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:229:45: note: FIX-IT applied suggested code changes
    void reportSkippedCycles(Cycle_t cycles) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:232:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_age.h:232:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:142:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~hr_router();
    ^
                 override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:142:17: note: FIX-IT applied suggested code changes
    ~hr_router();
                ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:144:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:144:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:145:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:145:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:146:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:146:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:147:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:147:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:149:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void notifyEvent();
         ^
                       override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:149:23: note: FIX-IT applied suggested code changes
    void notifyEvent();
                      ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:150:16: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int const* getOutputBufferCredits() {return xbar_in_credits;}
               ^
                                        override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:150:40: note: FIX-IT applied suggested code changes
    int const* getOutputBufferCredits() {return xbar_in_credits;}
                                       ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:153:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void sendTopologyEvent(int port, TopologyEvent* ev);
         ^
                                                        override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:153:56: note: FIX-IT applied suggested code changes
    void sendTopologyEvent(int port, TopologyEvent* ev);
                                                       ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:154:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void recvTopologyEvent(int port, TopologyEvent* ev);
         ^
                                                        override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:154:56: note: FIX-IT applied suggested code changes
    void recvTopologyEvent(int port, TopologyEvent* ev);
                                                       ^
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:157:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void printStatus(Output& out);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/hr_router.h:157:34: note: FIX-IT applied suggested code changes
    void printStatus(Output& out);
                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:116:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~xbar_arb_rand() {
    ^
                     override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:116:21: note: FIX-IT applied suggested code changes
    ~xbar_arb_rand() {
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:120:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setPorts(int num_ports_s, int num_vcs_s) {
         ^
                                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:120:50: note: FIX-IT applied suggested code changes
    void setPorts(int num_ports_s, int num_vcs_s) {
                                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:140:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void arbitrate(
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:146:21: note: FIX-IT applied suggested code changes
                   )
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:222:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void reportSkippedCycles(Cycle_t cycles) {
         ^
                                             override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:222:45: note: FIX-IT applied suggested code changes
    void reportSkippedCycles(Cycle_t cycles) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:225:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rand.h:225:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:70:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~xbar_arb_rr() {
    ^
                   override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:70:19: note: FIX-IT applied suggested code changes
    ~xbar_arb_rr() {
                  ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:74:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setPorts(int num_ports_s, int num_vcs_s) {
         ^
                                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:74:50: note: FIX-IT applied suggested code changes
    void setPorts(int num_ports_s, int num_vcs_s) {
                                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:93:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void arbitrate(
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:99:21: note: FIX-IT applied suggested code changes
                   )
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:157:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void reportSkippedCycles(Cycle_t cycles) {
         ^
                                             override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:157:45: note: FIX-IT applied suggested code changes
    void reportSkippedCycles(Cycle_t cycles) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:168:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_rr.h:168:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:71:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~xbar_arb_lru() = default;
    ^
                    override 
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:71:21: note: FIX-IT applied suggested code changes
    ~xbar_arb_lru() = default;
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:73:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setPorts(int num_ports_s, int num_vcs_s) {
         ^
                                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:73:50: note: FIX-IT applied suggested code changes
    void setPorts(int num_ports_s, int num_vcs_s) {
                                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:98:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void arbitrate(
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:104:21: note: FIX-IT applied suggested code changes
                   )
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:195:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void reportSkippedCycles(Cycle_t cycles) {
         ^
                                             override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:195:45: note: FIX-IT applied suggested code changes
    void reportSkippedCycles(Cycle_t cycles) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:198:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru.h:198:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:71:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~xbar_arb_lru_infx() = default;
    ^
                         override 
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:71:26: note: FIX-IT applied suggested code changes
    ~xbar_arb_lru_infx() = default;
                         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:73:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setPorts(int num_ports_s, int num_vcs_s) {
         ^
                                                  override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:73:50: note: FIX-IT applied suggested code changes
    void setPorts(int num_ports_s, int num_vcs_s) {
                                                 ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:98:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void arbitrate(
         ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:104:21: note: FIX-IT applied suggested code changes
                   )
                    ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:183:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void reportSkippedCycles(Cycle_t cycles) {
         ^
                                             override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:183:45: note: FIX-IT applied suggested code changes
    void reportSkippedCycles(Cycle_t cycles) {
                                            ^
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:186:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void dumpState(std::ostream& stream) {
         ^
                                         override
/home/sabbir/sst-elements-org/merlin/hr_router/xbar_arb_lru_infx.h:186:41: note: FIX-IT applied suggested code changes
    void dumpState(std::ostream& stream) {
                                        ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:58:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:58:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:60:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void inspectNetworkData(SimpleNetwork::Request* req);
         ^
                                                         override
/home/sabbir/sst-elements-org/merlin/inspectors/circuitCounter.h:60:57: note: FIX-IT applied suggested code changes
    void inspectNetworkData(SimpleNetwork::Request* req);
                                                        ^
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.h:54:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void inspectNetworkData(SimpleNetwork::Request* req);
         ^
                                                         override
/home/sabbir/sst-elements-org/merlin/inspectors/testInspector.h:54:57: note: FIX-IT applied suggested code changes
    void inspectNetworkData(SimpleNetwork::Request* req);
                                                        ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:60:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~single_arb_rr() = default;
    ^
                     override 
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:60:22: note: FIX-IT applied suggested code changes
    ~single_arb_rr() = default;
                     ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:62:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int next() {
        ^
               override
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:62:15: note: FIX-IT applied suggested code changes
    int next() {
              ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:68:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void satisfied() {}
         ^
                     override
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_rr.h:68:21: note: FIX-IT applied suggested code changes
    void satisfied() {}
                    ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:76:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~single_arb_lru() {
    ^
                      override
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:76:22: note: FIX-IT applied suggested code changes
    ~single_arb_lru() {
                     ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:80:9: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    int next() {
        ^
               override
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:80:15: note: FIX-IT applied suggested code changes
    int next() {
              ^
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:88:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void satisfied() {
         ^
                     override
/home/sabbir/sst-elements-org/merlin/arbitration/single_arb_lru.h:88:21: note: FIX-IT applied suggested code changes
    void satisfied() {
                    ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:53:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~offered_load_event() = default;
    ~~~~~~~~^
                                  override 
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:53:5: note: FIX-IT applied suggested code changes
    virtual ~offered_load_event() = default;
    ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:53:35: note: FIX-IT applied suggested code changes
    virtual ~offered_load_event() = default;
                                  ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:86:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~offered_load_complete_event() = default;
    ~~~~~~~~^
                                           override 
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:86:5: note: FIX-IT applied suggested code changes
    virtual ~offered_load_complete_event() = default;
    ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:86:44: note: FIX-IT applied suggested code changes
    virtual ~offered_load_complete_event() = default;
                                           ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:88:42: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual offered_load_complete_event* clone()  override {
    ~~~~~~~~                             ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:88:5: note: FIX-IT applied suggested code changes
    virtual offered_load_complete_event* clone()  override {
    ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:198:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~OfferedLoad();
    ^
                   override
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:198:19: note: FIX-IT applied suggested code changes
    ~OfferedLoad();
                  ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:200:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:200:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:201:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:201:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:202:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void complete(unsigned int phase);
         ^
                                      override
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:202:38: note: FIX-IT applied suggested code changes
    void complete(unsigned int phase);
                                     ^
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:203:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/offeredload/offered_load.h:203:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:154:13: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        int getNextValue()
            ^
                           override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:154:27: note: FIX-IT applied suggested code changes
        int getNextValue()
                          ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:160:14: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        void seed(uint32_t val)
             ^
                                override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:160:32: note: FIX-IT applied suggested code changes
        void seed(uint32_t val)
                               ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:182:13: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        int getNextValue()
            ^
                           override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:182:27: note: FIX-IT applied suggested code changes
        int getNextValue()
                          ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:187:14: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        void seed(uint32_t val)
             ^
                                override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:187:32: note: FIX-IT applied suggested code changes
        void seed(uint32_t val)
                               ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:215:13: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        int getNextValue()
            ^
                           override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:215:27: note: FIX-IT applied suggested code changes
        int getNextValue()
                          ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:220:14: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        void seed(uint32_t val)
             ^
                                override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:220:32: note: FIX-IT applied suggested code changes
        void seed(uint32_t val)
                               ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:254:13: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        int getNextValue()
            ^
                           override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:254:27: note: FIX-IT applied suggested code changes
        int getNextValue()
                          ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:259:14: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        void seed(uint32_t val)
             ^
                                override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:259:32: note: FIX-IT applied suggested code changes
        void seed(uint32_t val)
                               ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:283:13: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        int getNextValue()
            ^
                           override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:283:27: note: FIX-IT applied suggested code changes
        int getNextValue()
                          ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:291:14: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
        void seed(uint32_t val)
             ^
                                override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:291:32: note: FIX-IT applied suggested code changes
        void seed(uint32_t val)
                               ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:304:21: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual int getNextValue()
        ~~~~~~~~    ^
                                   override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:304:9: note: FIX-IT applied suggested code changes
        virtual int getNextValue()
        ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:304:35: note: FIX-IT applied suggested code changes
        virtual int getNextValue()
                                  ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:309:22: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
        virtual void seed(uint32_t val)
        ~~~~~~~~     ^
                                        override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:309:9: note: FIX-IT applied suggested code changes
        virtual void seed(uint32_t val)
        ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:309:40: note: FIX-IT applied suggested code changes
        virtual void seed(uint32_t val)
                                       ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:351:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~TrafficGen();
    ^
                  override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:351:18: note: FIX-IT applied suggested code changes
    ~TrafficGen();
                 ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:353:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void init(unsigned int phase);
         ^
                                  override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:353:34: note: FIX-IT applied suggested code changes
    void init(unsigned int phase);
                                 ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:354:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void setup();
         ^
                 override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:354:17: note: FIX-IT applied suggested code changes
    void setup();
                ^
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:355:10: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    void finish();
         ^
                  override
/home/sabbir/sst-elements-org/merlin/trafficgen/trafficgen.h:355:18: note: FIX-IT applied suggested code changes
    void finish();
                 ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:50:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_singlerouter();
    ^
                         override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:50:25: note: FIX-IT applied suggested code changes
    ~topo_singlerouter();
                        ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:52:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:52:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:52:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:53:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:53:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:53:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:55:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:55:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:55:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:56:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:56:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:56:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:58:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:58:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:58:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:60:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port) { return port; }
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:60:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port) { return port; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/singlerouter.h:60:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port) { return port; }
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:88:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly_legacy();
    ^
                             override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:88:29: note: FIX-IT applied suggested code changes
    ~topo_dragonfly_legacy();
                            ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:90:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:90:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:90:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:91:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:91:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:91:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:93:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:93:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:93:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:94:25: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual std::string getPortLogicalGroup(int port) const;
    ~~~~~~~~            ^
                                                            override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:94:5: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:94:60: note: FIX-IT applied suggested code changes
    virtual std::string getPortLogicalGroup(int port) const;
                                                           ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:96:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:96:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:96:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:97:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:97:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:97:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:99:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:99:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:99:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) { return vns * 3; }
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:100:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:100:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:100:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:121:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_dragonfly_legacy_event() = default;
    ^
                                   override 
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:121:36: note: FIX-IT applied suggested code changes
    ~topo_dragonfly_legacy_event() = default;
                                   ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:123:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event *clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/dragonfly_legacy.h:123:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event *clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:81:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_fattree();
    ^
                    override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:81:20: note: FIX-IT applied suggested code changes
    ~topo_fattree();
                   ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:83:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:83:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:83:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:84:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:84:5: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:84:70: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:85:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:85:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:85:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:87:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:87:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:87:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:88:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:88:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:88:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:90:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:90:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:90:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:92:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:92:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:92:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:94:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ~~~~~~~~     ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:94:5: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:94:71: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
                                                                      ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:96:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns) {return vns;}
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:96:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) {return vns;}
    ^
/home/sabbir/sst-elements-org/merlin/topology/fattree.h:96:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns) {return vns;}
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:58:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~topo_hyperx_event() { delete[] dest_loc; delete[] val_loc; }
    ~~~~~~~~^
                                 override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:58:5: note: FIX-IT applied suggested code changes
    virtual ~topo_hyperx_event() { delete[] dest_loc; delete[] val_loc; }
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:58:33: note: FIX-IT applied suggested code changes
    virtual ~topo_hyperx_event() { delete[] dest_loc; delete[] val_loc; }
                                ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:59:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:59:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:113:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual ~topo_hyperx_init_event() = default;
    ~~~~~~~~^
                                      override 
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:113:5: note: FIX-IT applied suggested code changes
    virtual ~topo_hyperx_init_event() = default;
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:113:39: note: FIX-IT applied suggested code changes
    virtual ~topo_hyperx_init_event() = default;
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:114:36: warning: 'virtual' is redundant since the function is already declared 'override' [modernize-use-override]
    virtual internal_router_event* clone() override
    ~~~~~~~~                       ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:114:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* clone() override
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:203:5: warning: annotate this function with 'override' or (rarely) 'final' [modernize-use-override]
    ~topo_hyperx();
    ^
                   override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:203:19: note: FIX-IT applied suggested code changes
    ~topo_hyperx();
                  ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:205:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void route(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                    override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:205:5: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:205:68: note: FIX-IT applied suggested code changes
    virtual void route(int port, int vc, internal_router_event* ev);
                                                                   ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:206:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ~~~~~~~~     ^
                                                                      override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:206:5: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:206:70: note: FIX-IT applied suggested code changes
    virtual void reroute(int port, int vc, internal_router_event* ev);
                                                                     ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:207:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                               override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:207:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:207:63: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_input(RtrEvent* ev);
                                                              ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:209:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ~~~~~~~~     ^
                                                                                                override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:209:5: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:209:96: note: FIX-IT applied suggested code changes
    virtual void routeInitData(int port, internal_router_event* ev, std::vector<int> &outPorts);
                                                                                               ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:210:36: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ~~~~~~~~                       ^
                                                                        override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:210:5: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:210:72: note: FIX-IT applied suggested code changes
    virtual internal_router_event* process_InitData_input(RtrEvent* ev);
                                                                       ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:212:23: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual PortState getPortState(int port) const;
    ~~~~~~~~          ^
                                                   override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:212:5: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:212:51: note: FIX-IT applied suggested code changes
    virtual PortState getPortState(int port) const;
                                                  ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:213:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int computeNumVCs(int vns);
    ~~~~~~~~    ^
                                       override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:213:5: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:213:39: note: FIX-IT applied suggested code changes
    virtual int computeNumVCs(int vns);
                                      ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:214:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual int getEndpointID(int port);
    ~~~~~~~~    ^
                                        override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:214:5: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:214:40: note: FIX-IT applied suggested code changes
    virtual int getEndpointID(int port);
                                       ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:216:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ~~~~~~~~     ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:216:5: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:216:71: note: FIX-IT applied suggested code changes
    virtual void setOutputBufferCreditArray(int const* array, int vcs);
                                                                      ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:217:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [modernize-use-override]
    virtual void setOutputQueueLengthsArray(int const* array, int vcs);
    ~~~~~~~~     ^
                                                                       override
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:217:5: note: FIX-IT applied suggested code changes
    virtual void setOutputQueueLengthsArray(int const* array, int vcs);
    ^
/home/sabbir/sst-elements-org/merlin/topology/hyperx.h:217:71: note: FIX-IT applied suggested code changes
    virtual void setOutputQueueLengthsArray(int const* array, int vcs);
                                                                      ^
